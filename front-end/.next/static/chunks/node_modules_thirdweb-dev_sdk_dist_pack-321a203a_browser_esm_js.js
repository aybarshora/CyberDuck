"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["node_modules_thirdweb-dev_sdk_dist_pack-321a203a_browser_esm_js"],{

/***/ "./node_modules/@thirdweb-dev/sdk/dist/pack-321a203a.browser.esm.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@thirdweb-dev/sdk/dist/pack-321a203a.browser.esm.js ***!
  \**************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Pack\": function() { return /* binding */ Pack; }\n/* harmony export */ });\n/* harmony import */ var _QueryParams_7d9473b5_browser_esm_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./QueryParams-7d9473b5.browser.esm.js */ \"./node_modules/@thirdweb-dev/sdk/dist/QueryParams-7d9473b5.browser.esm.js\");\n/* harmony import */ var _custom_fe0942b4_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./custom-fe0942b4.browser.esm.js */ \"./node_modules/@thirdweb-dev/sdk/dist/custom-fe0942b4.browser.esm.js\");\n/* harmony import */ var _erc_1155_standard_de02a76e_browser_esm_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./erc-1155-standard-de02a76e.browser.esm.js */ \"./node_modules/@thirdweb-dev/sdk/dist/erc-1155-standard-de02a76e.browser.esm.js\");\n/* harmony import */ var _thirdweb_dev_contracts_js_dist_abis_ERC20_json__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @thirdweb-dev/contracts-js/dist/abis/ERC20.json */ \"./node_modules/@thirdweb-dev/contracts-js/dist/abis/ERC20.json\");\n/* harmony import */ var _thirdweb_dev_contracts_js_dist_abis_IPackVRFDirect_json__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @thirdweb-dev/contracts-js/dist/abis/IPackVRFDirect.json */ \"./node_modules/@thirdweb-dev/contracts-js/dist/abis/IPackVRFDirect.json\");\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ethers */ \"./node_modules/ethers/lib.esm/index.js\");\n/* harmony import */ var zod__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! zod */ \"./node_modules/zod/lib/index.mjs\");\n/* harmony import */ var bn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! bn.js */ \"./node_modules/bn.js/lib/bn.js\");\n/* harmony import */ var bn_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(bn_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var cross_fetch__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! cross-fetch */ \"./node_modules/cross-fetch/dist/browser-ponyfill.js\");\n/* harmony import */ var cross_fetch__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(cross_fetch__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var tiny_invariant__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tiny-invariant */ \"./node_modules/tiny-invariant/dist/esm/tiny-invariant.js\");\n/* harmony import */ var eventemitter3__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! eventemitter3 */ \"./node_modules/eventemitter3/index.mjs\");\n/* harmony import */ var _thirdweb_dev_storage__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @thirdweb-dev/storage */ \"./node_modules/@thirdweb-dev/storage/dist/thirdweb-dev-storage.browser.esm.js\");\n/* harmony import */ var merkletreejs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! merkletreejs */ \"./node_modules/merkletreejs/dist/index.js\");\n/* harmony import */ var merkletreejs__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(merkletreejs__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var fast_deep_equal__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! fast-deep-equal */ \"./node_modules/fast-deep-equal/index.js\");\n/* harmony import */ var fast_deep_equal__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(fast_deep_equal__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var bs58__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! bs58 */ \"./node_modules/bs58/index.js\");\n/* harmony import */ var bs58__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(bs58__WEBPACK_IMPORTED_MODULE_7__);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * @internal\n */\nconst CommonWrappableSchema = zod__WEBPACK_IMPORTED_MODULE_8__.z.object({\n  contractAddress: _custom_fe0942b4_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.ab\n});\n\n/**\n * @internal\n */\nconst ERC20WrappableSchema = CommonWrappableSchema.extend({\n  quantity: _QueryParams_7d9473b5_browser_esm_js__WEBPACK_IMPORTED_MODULE_10__.A\n});\n\n/**\n * @internal\n */\nconst ERC721WrappableSchema = CommonWrappableSchema.extend({\n  tokenId: _custom_fe0942b4_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.a8\n});\n\n/**\n * @internal\n */\nconst ERC1155WrappableSchema = CommonWrappableSchema.extend({\n  tokenId: _custom_fe0942b4_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.a8,\n  quantity: _custom_fe0942b4_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.a8\n});\n\n/**\n * @internal\n */\nconst ERC20RewardSchema = ERC20WrappableSchema.omit({\n  quantity: true\n}).extend({\n  quantityPerReward: _QueryParams_7d9473b5_browser_esm_js__WEBPACK_IMPORTED_MODULE_10__.A\n});\n\n/**\n * @internal\n */\nconst ERC721RewardSchema = ERC721WrappableSchema;\n\n/**\n * @internal\n */\nconst ERC1155RewardSchema = ERC1155WrappableSchema.omit({\n  quantity: true\n}).extend({\n  quantityPerReward: _custom_fe0942b4_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.a8\n});\n\n/**\n * @internal\n */\nconst ERC20RewardContentsSchema = ERC20RewardSchema.extend({\n  totalRewards: _custom_fe0942b4_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.a8[\"default\"](\"1\")\n});\n\n/**\n * @internal\n */\nconst ERC721RewardContentsSchema = ERC721RewardSchema;\n\n/**\n * @internal\n */\nconst ERC1155RewardContentsSchema = ERC1155RewardSchema.extend({\n  totalRewards: _custom_fe0942b4_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.a8[\"default\"](\"1\")\n});\n\n/**\n * @internal\n */\nzod__WEBPACK_IMPORTED_MODULE_8__.z.object({\n  erc20Rewards: zod__WEBPACK_IMPORTED_MODULE_8__.z.array(ERC20RewardSchema).default([]),\n  erc721Rewards: zod__WEBPACK_IMPORTED_MODULE_8__.z.array(ERC721RewardSchema).default([]),\n  erc1155Rewards: zod__WEBPACK_IMPORTED_MODULE_8__.z.array(ERC1155RewardSchema).default([])\n});\n\n/**\n * @internal\n */\nconst PackRewardsOutputSchema = zod__WEBPACK_IMPORTED_MODULE_8__.z.object({\n  erc20Rewards: zod__WEBPACK_IMPORTED_MODULE_8__.z.array(ERC20RewardContentsSchema).default([]),\n  erc721Rewards: zod__WEBPACK_IMPORTED_MODULE_8__.z.array(ERC721RewardContentsSchema).default([]),\n  erc1155Rewards: zod__WEBPACK_IMPORTED_MODULE_8__.z.array(ERC1155RewardContentsSchema).default([])\n});\n\n/**\n * @internal\n */\nconst PackMetadataInputSchema = PackRewardsOutputSchema.extend({\n  packMetadata: _QueryParams_7d9473b5_browser_esm_js__WEBPACK_IMPORTED_MODULE_10__.N,\n  rewardsPerPack: _custom_fe0942b4_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.a8[\"default\"](\"1\"),\n  openStartTime: _custom_fe0942b4_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.ac[\"default\"](new Date())\n});\n\n/**\n * @public\n */\n\nclass PackVRF {\n  constructor(network, address, storage, options, chainId) {\n    var _this = this;\n    let contractWrapper = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : new _custom_fe0942b4_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.dD(network, address, _thirdweb_dev_contracts_js_dist_abis_IPackVRFDirect_json__WEBPACK_IMPORTED_MODULE_11__, options);\n    (0,_QueryParams_7d9473b5_browser_esm_js__WEBPACK_IMPORTED_MODULE_10__._)(this, \"featureName\", _custom_fe0942b4_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.dP.name);\n    (0,_QueryParams_7d9473b5_browser_esm_js__WEBPACK_IMPORTED_MODULE_10__._)(this, \"contractWrapper\", void 0);\n    (0,_QueryParams_7d9473b5_browser_esm_js__WEBPACK_IMPORTED_MODULE_10__._)(this, \"storage\", void 0);\n    (0,_QueryParams_7d9473b5_browser_esm_js__WEBPACK_IMPORTED_MODULE_10__._)(this, \"chainId\", void 0);\n    (0,_QueryParams_7d9473b5_browser_esm_js__WEBPACK_IMPORTED_MODULE_10__._)(this, \"events\", void 0);\n    /**\n     * Open pack\n     *\n     * @example\n     * ```javascript\n     * const tokenId = 0;\n     * const amount = 1;\n     * const receipt = await contract.pack.open(tokenId, amount);\n     * ```\n     *\n     * @remarks Open a pack using Chainlink VRFs random number generation\n     * @remarks This will return a transaction result with the requestId of the open request, NOT the contents of the pack\n     * @remarks To get the contents of the pack, you must call claimRewards once the VRF request has been fulfilled\n     * @remarks You can use the canClaimRewards method to check if the VRF request has been fulfilled\n     * @param tokenId\n     * @param amount\n     * @returns\n     * @twfeature PackVRF\n     */\n    (0,_QueryParams_7d9473b5_browser_esm_js__WEBPACK_IMPORTED_MODULE_10__._)(this, \"open\", (0,_custom_fe0942b4_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.dt)(async function (tokenId) {\n      let amount = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n      let gasLimit = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 500000;\n      return _custom_fe0942b4_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.aU.fromContractWrapper({\n        contractWrapper: _this.contractWrapper,\n        method: \"openPack\",\n        args: [tokenId, amount],\n        overrides: {\n          // Higher gas limit for opening packs\n          gasLimit\n        },\n        parse: receipt => {\n          let id = ethers__WEBPACK_IMPORTED_MODULE_12__.BigNumber.from(0);\n          try {\n            const event = _this.contractWrapper.parseLogs(\"PackOpenRequested\", receipt?.logs);\n            id = event[0].args.requestId;\n          } catch (e) {}\n          return {\n            receipt,\n            id\n          };\n        }\n      });\n    }));\n    /**\n     * Claim the rewards from an opened pack\n     *\n     * @example\n     * ```javascript\n     * const rewards = await contract.pack.claimRewards();\n     * ```\n     *\n     * @remarks This will return the contents of the pack\n     * @remarks Make sure to check if the VRF request has been fulfilled using canClaimRewards() before calling this method\n     * @returns the random rewards from opening a pack\n     * @twfeature PackVRF\n     */\n    (0,_QueryParams_7d9473b5_browser_esm_js__WEBPACK_IMPORTED_MODULE_10__._)(this, \"claimRewards\", (0,_custom_fe0942b4_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.dt)(async function () {\n      let gasLimit = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 500000;\n      return _custom_fe0942b4_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.aU.fromContractWrapper({\n        contractWrapper: _this.contractWrapper,\n        method: \"claimRewards\",\n        args: [],\n        overrides: {\n          // Higher gas limit for opening packs\n          gasLimit\n        },\n        parse: async receipt => {\n          const event = _this.contractWrapper.parseLogs(\"PackOpened\", receipt?.logs);\n          if (event.length === 0) {\n            throw new Error(\"PackOpened event not found\");\n          }\n          const rewards = event[0].args.rewardUnitsDistributed;\n          return await _this.parseRewards(rewards);\n        }\n      });\n    }));\n    this.contractWrapper = contractWrapper;\n    this.storage = storage;\n    this.chainId = chainId;\n    this.events = new _custom_fe0942b4_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.aP(this.contractWrapper);\n  }\n  onNetworkUpdated(network) {\n    this.contractWrapper.updateSignerOrProvider(network);\n  }\n  getAddress() {\n    return this.contractWrapper.readContract.address;\n  }\n  async parseRewards(rewards) {\n    const erc20Rewards = [];\n    const erc721Rewards = [];\n    const erc1155Rewards = [];\n    for (const reward of rewards) {\n      switch (reward.tokenType) {\n        case 0:\n          {\n            const tokenMetadata = await (0,_custom_fe0942b4_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.b$)(this.contractWrapper.getProvider(), reward.assetContract);\n            erc20Rewards.push({\n              contractAddress: reward.assetContract,\n              quantityPerReward: ethers__WEBPACK_IMPORTED_MODULE_12__.ethers.utils.formatUnits(reward.totalAmount, tokenMetadata.decimals).toString()\n            });\n            break;\n          }\n        case 1:\n          {\n            erc721Rewards.push({\n              contractAddress: reward.assetContract,\n              tokenId: reward.tokenId.toString()\n            });\n            break;\n          }\n        case 2:\n          {\n            erc1155Rewards.push({\n              contractAddress: reward.assetContract,\n              tokenId: reward.tokenId.toString(),\n              quantityPerReward: reward.totalAmount.toString()\n            });\n            break;\n          }\n      }\n    }\n    return {\n      erc20Rewards,\n      erc721Rewards,\n      erc1155Rewards\n    };\n  }\n\n  /**\n   * Setup a listener for when a pack is opened\n   *\n   * @example\n   * ```javascript\n   * const unsubscribe = await contract.pack.addPackOpenEventListener((packId, openerAddress, rewards) => {\n   *  console.log(`Pack ${packId} was opened by ${openerAddress} and contained:`, rewards);\n   * });\n   * @param callback the listener to call when a pack is opened\n   * @returns a unsubscribe function to cleanup the listener\n   * @twfeature PackVRF\n   */\n  async addPackOpenEventListener(callback) {\n    return this.events.addEventListener(\"PackOpened\", async event => {\n      callback(event.data.packId.toString(), event.data.opener, await this.parseRewards(event.data.rewardUnitsDistributed));\n    });\n  }\n\n  /**\n   * Check if a specific wallet can claim rewards after opening a pack\n   *\n   * @example\n   * ```javascript\n   * const canClaim = await contract.pack.canClaimRewards(\"{{wallet_address}}\");\n   * ```\n   * @param claimerAddress Optional: the address to check if they can claim rewards, defaults to the connected address\n   * @returns whether the connected address can claim rewards after opening a pack\n   * @twfeature PackVRF\n   */\n  async canClaimRewards(claimerAddress) {\n    const address = await (0,_custom_fe0942b4_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.cN)(claimerAddress || (await this.contractWrapper.getSignerAddress()));\n    return await this.contractWrapper.readContract.canClaimRewards(address);\n  }\n\n  /**\n   * Open a pack and claim the rewards\n   * @remarks This function will only start the flow of opening a pack, the rewards will be granted automatically to the connected address after VRF request is fulfilled\n   *\n   * @example\n   * ```javascript\n   * const packId = 0;\n   * const amount = 1;\n   * const { id } = await contract.pack.openAndClaim(packId, amount);\n   * ```\n   *\n   * @param packId The id of the pack to open\n   * @param amount Optional: the amount of packs to open, defaults to 1\n   * @param gasLimit Optional: the gas limit to use for the VRF callback transaction, defaults to 500000\n   * @returns\n   * @twfeature PackVRF\n   */\n  async openAndClaim(packId) {\n    let amount = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n    let gasLimit = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 500000;\n    const receipt = await this.contractWrapper.sendTransaction(\"openPackAndClaimRewards\", [packId, amount, gasLimit], {\n      // Higher gas limit for opening packs\n      gasLimit: ethers__WEBPACK_IMPORTED_MODULE_12__.BigNumber.from(500000)\n    });\n    let id = ethers__WEBPACK_IMPORTED_MODULE_12__.BigNumber.from(0);\n    try {\n      const event = this.contractWrapper.parseLogs(\"PackOpenRequested\", receipt?.logs);\n      id = event[0].args.requestId;\n    } catch (e) {}\n    return {\n      receipt,\n      id\n    };\n  }\n\n  /**\n   * Get the LINK balance of the contract\n   *\n   * @example\n   * ```javascript\n   * const balance = await contract.pack.getLinkBalance();\n   * ```\n   *\n   * @returns the balance of LINK in the contract\n   * @twfeature PackVRF\n   */\n  async getLinkBalance() {\n    return this.getLinkContract().balanceOf(this.contractWrapper.readContract.address);\n  }\n\n  /**\n   * Transfer LINK to this contract\n   *\n   * @example\n   * ```javascript\n   * const amount = 1;\n   * await contract.pack.transferLink(amount);\n   * ```\n   *\n   * @param amount the amount of LINK to transfer to the contract\n   * @twfeature PackVRF\n   */\n  async transferLink(amount) {\n    await this.getLinkContract().transfer(this.contractWrapper.readContract.address, amount);\n  }\n  getLinkContract() {\n    const linkAddress = _custom_fe0942b4_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.d0[this.chainId];\n    if (!linkAddress) {\n      throw new Error(`No LINK token address found for chainId ${this.chainId}`);\n    }\n    const contract = new _custom_fe0942b4_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.dD(this.contractWrapper.getSignerOrProvider(), linkAddress, _thirdweb_dev_contracts_js_dist_abis_ERC20_json__WEBPACK_IMPORTED_MODULE_13__, this.contractWrapper.options);\n    return new _custom_fe0942b4_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.ap(contract, this.storage, this.chainId);\n  }\n}\n\n/**\n * Create lootboxes of NFTs with rarity based open mechanics.\n *\n * @example\n *\n * ```javascript\n * import { ThirdwebSDK } from \"@thirdweb-dev/sdk\";\n *\n * const sdk = new ThirdwebSDK(\"{{chainName}}\");\n * const contract = await sdk.getContract(\"{{contract_address}}\", \"pack\");\n * ```\n *\n * @public\n */\nclass Pack extends _erc_1155_standard_de02a76e_browser_esm_js__WEBPACK_IMPORTED_MODULE_14__.S {\n  /**\n   * Configure royalties\n   * @remarks Set your own royalties for the entire contract or per pack\n   * @example\n   * ```javascript\n   * // royalties on the whole contract\n   * contract.royalties.setDefaultRoyaltyInfo({\n   *   seller_fee_basis_points: 100, // 1%\n   *   fee_recipient: \"0x...\"\n   * });\n   * // override royalty for a particular pack\n   * contract.royalties.setTokenRoyaltyInfo(packId, {\n   *   seller_fee_basis_points: 500, // 5%\n   *   fee_recipient: \"0x...\"\n   * });\n   * ```\n   */\n\n  /**\n   * @internal\n   */\n\n  /**\n   * If enabled in the contract, use the Chainlink VRF functionality to open packs\n   */\n  get vrf() {\n    return (0,_custom_fe0942b4_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.bS)(this._vrf, _custom_fe0942b4_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.dP);\n  }\n  constructor(network, address, storage) {\n    var _this;\n    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    let abi = arguments.length > 4 ? arguments[4] : undefined;\n    let chainId = arguments.length > 5 ? arguments[5] : undefined;\n    let contractWrapper = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : new _custom_fe0942b4_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.dD(network, address, abi, options.gasless && \"openzeppelin\" in options.gasless ? {\n      ...options,\n      gasless: {\n        ...options.gasless,\n        openzeppelin: {\n          ...options.gasless.openzeppelin,\n          useEOAForwarder: true\n        }\n      }\n    } : options);\n    super(contractWrapper, storage, chainId);\n    _this = this;\n    (0,_QueryParams_7d9473b5_browser_esm_js__WEBPACK_IMPORTED_MODULE_10__._)(this, \"abi\", void 0);\n    (0,_QueryParams_7d9473b5_browser_esm_js__WEBPACK_IMPORTED_MODULE_10__._)(this, \"metadata\", void 0);\n    (0,_QueryParams_7d9473b5_browser_esm_js__WEBPACK_IMPORTED_MODULE_10__._)(this, \"app\", void 0);\n    (0,_QueryParams_7d9473b5_browser_esm_js__WEBPACK_IMPORTED_MODULE_10__._)(this, \"roles\", void 0);\n    (0,_QueryParams_7d9473b5_browser_esm_js__WEBPACK_IMPORTED_MODULE_10__._)(this, \"encoder\", void 0);\n    (0,_QueryParams_7d9473b5_browser_esm_js__WEBPACK_IMPORTED_MODULE_10__._)(this, \"events\", void 0);\n    (0,_QueryParams_7d9473b5_browser_esm_js__WEBPACK_IMPORTED_MODULE_10__._)(this, \"estimator\", void 0);\n    (0,_QueryParams_7d9473b5_browser_esm_js__WEBPACK_IMPORTED_MODULE_10__._)(this, \"royalties\", void 0);\n    (0,_QueryParams_7d9473b5_browser_esm_js__WEBPACK_IMPORTED_MODULE_10__._)(this, \"interceptor\", void 0);\n    (0,_QueryParams_7d9473b5_browser_esm_js__WEBPACK_IMPORTED_MODULE_10__._)(this, \"owner\", void 0);\n    (0,_QueryParams_7d9473b5_browser_esm_js__WEBPACK_IMPORTED_MODULE_10__._)(this, \"_vrf\", void 0);\n    /** ******************************\n     * WRITE FUNCTIONS\n     *******************************/\n    /**\n     * Create Pack\n     * @remarks Create a new pack with the given metadata and rewards and mint it to the connected wallet.\n     * @remarks See {@link Pack.createTo}\n     *\n     * @param metadataWithRewards - the metadata and rewards to include in the pack\n     * @example\n     * ```javascript\n     * const pack = {\n     *   // The metadata for the pack NFT itself\n     *   packMetadata: {\n     *     name: \"My Pack\",\n     *     description: \"This is a new pack\",\n     *     image: \"ipfs://...\",\n     *   },\n     *   // ERC20 rewards to be included in the pack\n     *   erc20Rewards: [\n     *     {\n     *       assetContract: \"0x...\",\n     *       quantityPerReward: 5,\n     *       quantity: 100,\n     *       totalRewards: 20,\n     *     }\n     *   ],\n     *   // ERC721 rewards to be included in the pack\n     *   erc721Rewards: [\n     *     {\n     *       assetContract: \"0x...\",\n     *       tokenId: 0,\n     *     }\n     *   ],\n     *   // ERC1155 rewards to be included in the pack\n     *   erc1155Rewards: [\n     *     {\n     *       assetContract: \"0x...\",\n     *       tokenId: 0,\n     *       quantityPerReward: 1,\n     *       totalRewards: 100,\n     *     }\n     *   ],\n     *   openStartTime: new Date(), // the date that packs can start to be opened, defaults to now\n     *   rewardsPerPack: 1, // the number of rewards in each pack, defaults to 1\n     * }\n     *\n     * const tx = await contract.create(pack);\n     * ```\n     */\n    (0,_QueryParams_7d9473b5_browser_esm_js__WEBPACK_IMPORTED_MODULE_10__._)(this, \"create\", (0,_custom_fe0942b4_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.dt)(async metadataWithRewards => {\n      const signerAddress = await this.contractWrapper.getSignerAddress();\n      return this.createTo.prepare(signerAddress, metadataWithRewards);\n    }));\n    /**\n     * Add Pack Contents\n     * @remarks Add contents to an existing pack.\n     * @remarks See {@link Pack.addPackContents}\n     *\n     * @param packId - token Id of the pack to add contents to\n     * @param packContents - the rewards to include in the pack\n     * @example\n     * ```javascript\n     * const packContents = {\n     *   // ERC20 rewards to be included in the pack\n     *   erc20Rewards: [\n     *     {\n     *       assetContract: \"0x...\",\n     *       quantityPerReward: 5,\n     *       quantity: 100,\n     *       totalRewards: 20,\n     *     }\n     *   ],\n     *   // ERC721 rewards to be included in the pack\n     *   erc721Rewards: [\n     *     {\n     *       assetContract: \"0x...\",\n     *       tokenId: 0,\n     *     }\n     *   ],\n     *   // ERC1155 rewards to be included in the pack\n     *   erc1155Rewards: [\n     *     {\n     *       assetContract: \"0x...\",\n     *       tokenId: 0,\n     *       quantityPerReward: 1,\n     *       totalRewards: 100,\n     *     }\n     *   ],\n     * }\n     *\n     * const tx = await contract.addPackContents(packId, packContents);\n     * ```\n     */\n    (0,_QueryParams_7d9473b5_browser_esm_js__WEBPACK_IMPORTED_MODULE_10__._)(this, \"addPackContents\", (0,_custom_fe0942b4_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.dt)(async (packId, packContents) => {\n      const signerAddress = await this.contractWrapper.getSignerAddress();\n      const parsedContents = await PackRewardsOutputSchema.parseAsync(packContents);\n      const {\n        contents,\n        numOfRewardUnits\n      } = await this.toPackContentArgs(parsedContents);\n      return _custom_fe0942b4_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.aU.fromContractWrapper({\n        contractWrapper: this.contractWrapper,\n        method: \"addPackContents\",\n        args: [packId, contents, numOfRewardUnits, signerAddress],\n        parse: receipt => {\n          const event = this.contractWrapper.parseLogs(\"PackUpdated\", receipt?.logs);\n          if (event.length === 0) {\n            throw new Error(\"PackUpdated event not found\");\n          }\n          const id = event[0].args.packId;\n          return {\n            id: id,\n            receipt,\n            data: () => this.erc1155.get(id)\n          };\n        }\n      });\n    }));\n    /**\n     * Create Pack To Wallet\n     * @remarks Create a new pack with the given metadata and rewards and mint it to the specified address.\n     *\n     * @param to - the address to mint the pack to\n     * @param metadataWithRewards - the metadata and rewards to include in the pack\n     *\n     * @example\n     * ```javascript\n     * const pack = {\n     *   // The metadata for the pack NFT itself\n     *   packMetadata: {\n     *     name: \"My Pack\",\n     *     description: \"This is a new pack\",\n     *     image: \"ipfs://...\",\n     *   },\n     *   // ERC20 rewards to be included in the pack\n     *   erc20Rewards: [\n     *     {\n     *       assetContract: \"0x...\",\n     *       quantityPerReward: 5,\n     *       quantity: 100,\n     *       totalRewards: 20,\n     *     }\n     *   ],\n     *   // ERC721 rewards to be included in the pack\n     *   erc721Rewards: [\n     *     {\n     *       assetContract: \"0x...\",\n     *       tokenId: 0,\n     *     }\n     *   ],\n     *   // ERC1155 rewards to be included in the pack\n     *   erc1155Rewards: [\n     *     {\n     *       assetContract: \"0x...\",\n     *       tokenId: 0,\n     *       quantityPerReward: 1,\n     *       totalRewards: 100,\n     *     }\n     *   ],\n     *   openStartTime: new Date(), // the date that packs can start to be opened, defaults to now\n     *   rewardsPerPack: 1, // the number of rewards in each pack, defaults to 1\n     * }\n     *\n     * const tx = await contract.createTo(\"0x...\", pack);\n     * ```\n     */\n    (0,_QueryParams_7d9473b5_browser_esm_js__WEBPACK_IMPORTED_MODULE_10__._)(this, \"createTo\", (0,_custom_fe0942b4_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.dt)(async (to, metadataWithRewards) => {\n      const uri = await (0,_custom_fe0942b4_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.dL)(metadataWithRewards.packMetadata, this.storage);\n      const parsedMetadata = await PackMetadataInputSchema.parseAsync(metadataWithRewards);\n      const {\n        erc20Rewards,\n        erc721Rewards,\n        erc1155Rewards\n      } = parsedMetadata;\n      const rewardsData = {\n        erc20Rewards,\n        erc721Rewards,\n        erc1155Rewards\n      };\n      const {\n        contents,\n        numOfRewardUnits\n      } = await this.toPackContentArgs(rewardsData);\n      return _custom_fe0942b4_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.aU.fromContractWrapper({\n        contractWrapper: this.contractWrapper,\n        method: \"createPack\",\n        args: [contents, numOfRewardUnits, uri, parsedMetadata.openStartTime, parsedMetadata.rewardsPerPack, await (0,_custom_fe0942b4_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.cN)(to)],\n        parse: receipt => {\n          const event = this.contractWrapper.parseLogs(\"PackCreated\", receipt?.logs);\n          if (event.length === 0) {\n            throw new Error(\"PackCreated event not found\");\n          }\n          const packId = event[0].args.packId;\n          return {\n            id: packId,\n            receipt,\n            data: () => this.erc1155.get(packId)\n          };\n        }\n      });\n    }));\n    /**\n     * Open Pack\n     *\n     * @remarks - Open a pack to reveal the contained rewards. This will burn the specified pack and\n     * the contained assets will be transferred to the opening users wallet.\n     *\n     * @param tokenId - the token ID of the pack you want to open\n     * @param amount - the amount of packs you want to open\n     *\n     * @example\n     * ```javascript\n     * const tokenId = 0\n     * const amount = 1\n     * const tx = await contract.open(tokenId, amount);\n     * ```\n     */\n    (0,_QueryParams_7d9473b5_browser_esm_js__WEBPACK_IMPORTED_MODULE_10__._)(this, \"open\", (0,_custom_fe0942b4_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.dt)(async function (tokenId) {\n      let amount = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n      let gasLimit = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 500000;\n      if (_this._vrf) {\n        throw new Error(\"This contract is using Chainlink VRF, use `contract.vrf.open()` or `contract.vrf.openAndClaim()` instead\");\n      }\n      return _custom_fe0942b4_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.aU.fromContractWrapper({\n        contractWrapper: _this.contractWrapper,\n        method: \"openPack\",\n        args: [tokenId, amount],\n        overrides: {\n          // Higher gas limit for opening packs\n          gasLimit\n        },\n        parse: async receipt => {\n          const event = _this.contractWrapper.parseLogs(\"PackOpened\", receipt?.logs);\n          if (event.length === 0) {\n            throw new Error(\"PackOpened event not found\");\n          }\n          const rewards = event[0].args.rewardUnitsDistributed;\n          const erc20Rewards = [];\n          const erc721Rewards = [];\n          const erc1155Rewards = [];\n          for (const reward of rewards) {\n            switch (reward.tokenType) {\n              case 0:\n                {\n                  const tokenMetadata = await (0,_custom_fe0942b4_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.b$)(_this.contractWrapper.getProvider(), reward.assetContract);\n                  erc20Rewards.push({\n                    contractAddress: reward.assetContract,\n                    quantityPerReward: ethers__WEBPACK_IMPORTED_MODULE_12__.ethers.utils.formatUnits(reward.totalAmount, tokenMetadata.decimals).toString()\n                  });\n                  break;\n                }\n              case 1:\n                {\n                  erc721Rewards.push({\n                    contractAddress: reward.assetContract,\n                    tokenId: reward.tokenId.toString()\n                  });\n                  break;\n                }\n              case 2:\n                {\n                  erc1155Rewards.push({\n                    contractAddress: reward.assetContract,\n                    tokenId: reward.tokenId.toString(),\n                    quantityPerReward: reward.totalAmount.toString()\n                  });\n                  break;\n                }\n            }\n          }\n          return {\n            erc20Rewards,\n            erc721Rewards,\n            erc1155Rewards\n          };\n        }\n      });\n    }));\n    this.abi = _custom_fe0942b4_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.e.parse(abi || []);\n    this.metadata = new _custom_fe0942b4_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.ai(this.contractWrapper, _custom_fe0942b4_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.dQ, this.storage);\n    this.app = new _custom_fe0942b4_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.aW(this.contractWrapper, this.metadata, this.storage);\n    this.roles = new _custom_fe0942b4_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.aj(this.contractWrapper, Pack.contractRoles);\n    this.royalties = new _custom_fe0942b4_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.ak(this.contractWrapper, this.metadata);\n    this.encoder = new _custom_fe0942b4_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.ah(this.contractWrapper);\n    this.estimator = new _custom_fe0942b4_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.aO(this.contractWrapper);\n    this.events = new _custom_fe0942b4_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.aP(this.contractWrapper);\n    this.interceptor = new _custom_fe0942b4_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.aQ(this.contractWrapper);\n    this.owner = new _custom_fe0942b4_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.aT(this.contractWrapper);\n    this._vrf = this.detectVrf();\n  }\n\n  /**\n   * @internal\n   */\n  onNetworkUpdated(network) {\n    this.contractWrapper.updateSignerOrProvider(network);\n    this._vrf?.onNetworkUpdated(network);\n  }\n  getAddress() {\n    return this.contractWrapper.readContract.address;\n  }\n\n  /** ******************************\n   * READ FUNCTIONS\n   *******************************/\n\n  /**\n   * Get a single Pack\n   *\n   * @remarks Get all the data associated with every pack in this contract.\n   *\n   * By default, returns the first 100 packs, use queryParams to fetch more.\n   *\n   * @example\n   * ```javascript\n   * const pack = await contract.get(0);\n   * console.log(packs;\n   * ```\n   */\n  async get(tokenId) {\n    return this.erc1155.get(tokenId);\n  }\n\n  /**\n   * Get All Packs\n   *\n   * @remarks Get all the data associated with every pack in this contract.\n   *\n   * By default, returns the first 100 packs, use queryParams to fetch more.\n   *\n   * @example\n   * ```javascript\n   * const packs = await contract.getAll();\n   * console.log(packs;\n   * ```\n   * @param queryParams - optional filtering to only fetch a subset of results.\n   * @returns The pack metadata for all packs queried.\n   */\n  async getAll(queryParams) {\n    return this.erc1155.getAll(queryParams);\n  }\n\n  /**\n   * Get Owned Packs\n   *\n   * @remarks Get all the data associated with the packs owned by a specific wallet.\n   *\n   * @example\n   * ```javascript\n   * // Address of the wallet to get the packs of\n   * const address = \"{{wallet_address}}\";\n   * const packss = await contract.getOwned(address);\n   * ```\n   *\n   * @returns The pack metadata for all the owned packs in the contract.\n   */\n  async getOwned(walletAddress) {\n    return this.erc1155.getOwned(walletAddress);\n  }\n\n  /**\n   * Get the number of packs created\n   * @returns the total number of packs minted in this contract\n   * @public\n   */\n  async getTotalCount() {\n    return this.erc1155.totalCount();\n  }\n\n  /**\n   * Get whether users can transfer packs from this contract\n   */\n  async isTransferRestricted() {\n    const anyoneCanTransfer = await this.contractWrapper.readContract.hasRole((0,_custom_fe0942b4_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.bs)(\"transfer\"), ethers__WEBPACK_IMPORTED_MODULE_12__.ethers.constants.AddressZero);\n    return !anyoneCanTransfer;\n  }\n\n  /**\n   * Get Pack Contents\n   * @remarks Get the rewards contained inside a pack.\n   *\n   * @param packId - The id of the pack to get the contents of.\n   * @returns - The contents of the pack.\n   *\n   * @example\n   * ```javascript\n   * const packId = 0;\n   * const contents = await contract.getPackContents(packId);\n   * console.log(contents.erc20Rewards);\n   * console.log(contents.erc721Rewards);\n   * console.log(contents.erc1155Rewards);\n   * ```\n   */\n  async getPackContents(packId) {\n    const {\n      contents,\n      perUnitAmounts\n    } = await this.contractWrapper.readContract.getPackContents(packId);\n    const erc20Rewards = [];\n    const erc721Rewards = [];\n    const erc1155Rewards = [];\n    for (let i = 0; i < contents.length; i++) {\n      const reward = contents[i];\n      const amount = perUnitAmounts[i];\n      switch (reward.tokenType) {\n        case 0:\n          {\n            const tokenMetadata = await (0,_custom_fe0942b4_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.b$)(this.contractWrapper.getProvider(), reward.assetContract);\n            const quantityPerReward = ethers__WEBPACK_IMPORTED_MODULE_12__.ethers.utils.formatUnits(amount, tokenMetadata.decimals);\n            const totalRewards = ethers__WEBPACK_IMPORTED_MODULE_12__.ethers.utils.formatUnits(ethers__WEBPACK_IMPORTED_MODULE_12__.BigNumber.from(reward.totalAmount).div(amount), tokenMetadata.decimals);\n            erc20Rewards.push({\n              contractAddress: reward.assetContract,\n              quantityPerReward,\n              totalRewards\n            });\n            break;\n          }\n        case 1:\n          {\n            erc721Rewards.push({\n              contractAddress: reward.assetContract,\n              tokenId: reward.tokenId.toString()\n            });\n            break;\n          }\n        case 2:\n          {\n            erc1155Rewards.push({\n              contractAddress: reward.assetContract,\n              tokenId: reward.tokenId.toString(),\n              quantityPerReward: amount.toString(),\n              totalRewards: ethers__WEBPACK_IMPORTED_MODULE_12__.BigNumber.from(reward.totalAmount).div(amount).toString()\n            });\n            break;\n          }\n      }\n    }\n    return {\n      erc20Rewards,\n      erc721Rewards,\n      erc1155Rewards\n    };\n  }\n  /** *****************************\n   * PRIVATE FUNCTIONS\n   *******************************/\n\n  async toPackContentArgs(metadataWithRewards) {\n    const contents = [];\n    const numOfRewardUnits = [];\n    const {\n      erc20Rewards,\n      erc721Rewards,\n      erc1155Rewards\n    } = metadataWithRewards;\n    const provider = this.contractWrapper.getProvider();\n    const owner = await this.contractWrapper.getSignerAddress();\n    for (const erc20 of erc20Rewards) {\n      const normalizedQuantity = await (0,_custom_fe0942b4_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.b_)(provider, erc20.quantityPerReward, erc20.contractAddress);\n      // Multiply the quantity of one reward by the number of rewards\n      const totalQuantity = normalizedQuantity.mul(erc20.totalRewards);\n      const hasAllowance = await (0,_custom_fe0942b4_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.c3)(this.contractWrapper, erc20.contractAddress, totalQuantity);\n      if (!hasAllowance) {\n        throw new Error(`ERC20 token with contract address \"${erc20.contractAddress}\" does not have enough allowance to transfer.\\n\\nYou can set allowance to the multiwrap contract to transfer these tokens by running:\\n\\nawait sdk.getToken(\"${erc20.contractAddress}\").setAllowance(\"${this.getAddress()}\", ${totalQuantity});\\n\\n`);\n      }\n      numOfRewardUnits.push(erc20.totalRewards);\n      contents.push({\n        assetContract: erc20.contractAddress,\n        tokenType: 0,\n        totalAmount: totalQuantity,\n        tokenId: 0\n      });\n    }\n    for (const erc721 of erc721Rewards) {\n      const isApproved = await (0,_custom_fe0942b4_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.dw)(this.contractWrapper.getProvider(), this.getAddress(), erc721.contractAddress, erc721.tokenId, owner);\n      if (!isApproved) {\n        throw new Error(`ERC721 token \"${erc721.tokenId}\" with contract address \"${erc721.contractAddress}\" is not approved for transfer.\\n\\nYou can give approval the multiwrap contract to transfer this token by running:\\n\\nawait sdk.getNFTCollection(\"${erc721.contractAddress}\").setApprovalForToken(\"${this.getAddress()}\", ${erc721.tokenId});\\n\\n`);\n      }\n      numOfRewardUnits.push(\"1\");\n      contents.push({\n        assetContract: erc721.contractAddress,\n        tokenType: 1,\n        totalAmount: 1,\n        tokenId: erc721.tokenId\n      });\n    }\n    for (const erc1155 of erc1155Rewards) {\n      const isApproved = await (0,_custom_fe0942b4_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.dw)(this.contractWrapper.getProvider(), this.getAddress(), erc1155.contractAddress, erc1155.tokenId, owner);\n      if (!isApproved) {\n        throw new Error(`ERC1155 token \"${erc1155.tokenId}\" with contract address \"${erc1155.contractAddress}\" is not approved for transfer.\\n\\nYou can give approval the multiwrap contract to transfer this token by running:\\n\\nawait sdk.getEdition(\"${erc1155.contractAddress}\").setApprovalForAll(\"${this.getAddress()}\", true);\\n\\n`);\n      }\n      numOfRewardUnits.push(erc1155.totalRewards);\n      contents.push({\n        assetContract: erc1155.contractAddress,\n        tokenType: 2,\n        totalAmount: ethers__WEBPACK_IMPORTED_MODULE_12__.BigNumber.from(erc1155.quantityPerReward).mul(ethers__WEBPACK_IMPORTED_MODULE_12__.BigNumber.from(erc1155.totalRewards)),\n        tokenId: erc1155.tokenId\n      });\n    }\n    return {\n      contents,\n      numOfRewardUnits\n    };\n  }\n\n  /**\n   * @internal\n   */\n  async prepare(method, args, overrides) {\n    return _custom_fe0942b4_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.aU.fromContractWrapper({\n      contractWrapper: this.contractWrapper,\n      method,\n      args,\n      overrides\n    });\n  }\n\n  /**\n   * @internal\n   */\n  async call(functionName, args, overrides) {\n    return this.contractWrapper.call(functionName, args, overrides);\n  }\n  detectVrf() {\n    if ((0,_custom_fe0942b4_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.bT)(this.contractWrapper, \"PackVRF\")) {\n      return new PackVRF(this.contractWrapper.getSignerOrProvider(), this.contractWrapper.readContract.address, this.storage, this.contractWrapper.options, this.chainId);\n    }\n    return undefined;\n  }\n}\n(0,_QueryParams_7d9473b5_browser_esm_js__WEBPACK_IMPORTED_MODULE_10__._)(Pack, \"contractRoles\", [\"admin\", \"minter\", \"asset\", \"transfer\"]);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRoaXJkd2ViLWRldi9zZGsvZGlzdC9wYWNrLTMyMWEyMDNhLmJyb3dzZXIuZXNtLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUEwSDtBQUMybUI7QUFDbHBCO0FBQ1o7QUFDWTtBQUN4QztBQUNuQjtBQUNUO0FBQ007QUFDRztBQUNNO0FBQ1A7QUFDc0M7QUFDOUI7QUFDbUM7QUFDVDtBQUNRO0FBQ0c7QUFDRztBQUNiO0FBQ007QUFDRTtBQUNKO0FBQ1M7QUFDSjtBQUNDO0FBQ0Y7QUFDQTtBQUNQO0FBQ1U7QUFDSjtBQUNKO0FBQ007QUFDSztBQUNHO0FBQ1A7QUFDQTtBQUNDO0FBQ1I7QUFDTTtBQUNLO0FBQ0c7QUFDZjtBQUNVO0FBQ0Y7QUFDSztBQUNQO0FBQ1A7QUFDVTtBQUNGO0FBQ0M7QUFDVDtBQUNLO0FBQ1U7QUFDVjtBQUNBO0FBQ0o7QUFDRDtBQUNRO0FBQ1A7QUFDUztBQUN4QztBQUNQO0FBQ0c7QUFDWDtBQUM2QztBQUNRO0FBQ0M7QUFDUTtBQUNQO0FBQ1E7QUFDQztBQUN4QztBQUN1QjtBQUNDO0FBQ2hEO0FBQ1k7QUFDd0M7O0FBRWxFO0FBQ0E7QUFDQTtBQUNBLDhCQUE4Qix5Q0FBUTtBQUN0QyxtQkFBbUIsK0RBQWtCO0FBQ3JDLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLG9FQUFZO0FBQ3hCLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLCtEQUFrQjtBQUM3QixDQUFDOztBQUVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVywrREFBa0I7QUFDN0IsWUFBWSwrREFBa0I7QUFDOUIsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNELHFCQUFxQixvRUFBWTtBQUNqQyxDQUFDOztBQUVEO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QscUJBQXFCLCtE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cy9AdGhpcmR3ZWItZGV2L3Nkay9kaXN0L3BhY2stMzIxYTIwM2EuYnJvd3Nlci5lc20uanM/MGVkNyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBIGFzIEFtb3VudFNjaGVtYSwgTiBhcyBORlRJbnB1dE9yVXJpU2NoZW1hLCBfIGFzIF9kZWZpbmVQcm9wZXJ0eSB9IGZyb20gJy4vUXVlcnlQYXJhbXMtN2Q5NDczYjUuYnJvd3Nlci5lc20uanMnO1xuaW1wb3J0IHsgYWIgYXMgQWRkcmVzc09yRW5zU2NoZW1hLCBhOCBhcyBCaWdOdW1iZXJpc2hTY2hlbWEsIGFjIGFzIFJhd0RhdGVTY2hlbWEsIGREIGFzIENvbnRyYWN0V3JhcHBlciwgZFAgYXMgRkVBVFVSRV9QQUNLX1ZSRiwgZHQgYXMgYnVpbGRUcmFuc2FjdGlvbkZ1bmN0aW9uLCBhVSBhcyBUcmFuc2FjdGlvbiwgYVAgYXMgQ29udHJhY3RFdmVudHMsIGIkIGFzIGZldGNoQ3VycmVuY3lNZXRhZGF0YSwgY04gYXMgcmVzb2x2ZUFkZHJlc3MsIGQwIGFzIExJTktfVE9LRU5fQUREUkVTUywgYXAgYXMgRXJjMjAsIGJTIGFzIGFzc2VydEVuYWJsZWQsIGUgYXMgQWJpU2NoZW1hLCBhaSBhcyBDb250cmFjdE1ldGFkYXRhLCBkUSBhcyBQYWNrQ29udHJhY3RTY2hlbWEsIGFXIGFzIENvbnRyYWN0QXBwVVJJLCBhaiBhcyBDb250cmFjdFJvbGVzLCBhayBhcyBDb250cmFjdFJveWFsdHksIGFoIGFzIENvbnRyYWN0RW5jb2RlciwgYU8gYXMgR2FzQ29zdEVzdGltYXRvciwgYVEgYXMgQ29udHJhY3RJbnRlcmNlcHRvciwgYVQgYXMgQ29udHJhY3RPd25lciwgYnMgYXMgZ2V0Um9sZUhhc2gsIGJfIGFzIG5vcm1hbGl6ZVByaWNlVmFsdWUsIGMzIGFzIGhhc0VSQzIwQWxsb3dhbmNlLCBkdyBhcyBpc1Rva2VuQXBwcm92ZWRGb3JUcmFuc2ZlciwgYlQgYXMgZGV0ZWN0Q29udHJhY3RGZWF0dXJlLCBkTCBhcyB1cGxvYWRPckV4dHJhY3RVUkkgfSBmcm9tICcuL2N1c3RvbS1mZTA5NDJiNC5icm93c2VyLmVzbS5qcyc7XG5pbXBvcnQgeyBTIGFzIFN0YW5kYXJkRXJjMTE1NSB9IGZyb20gJy4vZXJjLTExNTUtc3RhbmRhcmQtZGUwMmE3NmUuYnJvd3Nlci5lc20uanMnO1xuaW1wb3J0IEVSQzIwQWJpIGZyb20gJ0B0aGlyZHdlYi1kZXYvY29udHJhY3RzLWpzL2Rpc3QvYWJpcy9FUkMyMC5qc29uJztcbmltcG9ydCBJUGFja1ZSRkFiaSBmcm9tICdAdGhpcmR3ZWItZGV2L2NvbnRyYWN0cy1qcy9kaXN0L2FiaXMvSVBhY2tWUkZEaXJlY3QuanNvbic7XG5pbXBvcnQgeyBCaWdOdW1iZXIsIGV0aGVycyB9IGZyb20gJ2V0aGVycyc7XG5pbXBvcnQgeyB6IH0gZnJvbSAnem9kJztcbmltcG9ydCAnYm4uanMnO1xuaW1wb3J0ICdjcm9zcy1mZXRjaCc7XG5pbXBvcnQgJ3RpbnktaW52YXJpYW50JztcbmltcG9ydCAnQHRoaXJkd2ViLWRldi9jaGFpbnMnO1xuaW1wb3J0ICdldmVudGVtaXR0ZXIzJztcbmltcG9ydCAnQHRoaXJkd2ViLWRldi9jb250cmFjdHMtanMvZGlzdC9hYmlzL0ZvcndhcmRlci5qc29uJztcbmltcG9ydCAnQHRoaXJkd2ViLWRldi9zdG9yYWdlJztcbmltcG9ydCAnQHRoaXJkd2ViLWRldi9jb250cmFjdHMtanMvZGlzdC9hYmlzL0lCdXJuYWJsZUVSQzIwLmpzb24nO1xuaW1wb3J0ICdAdGhpcmR3ZWItZGV2L2NvbnRyYWN0cy1qcy9kaXN0L2FiaXMvSURyb3AuanNvbic7XG5pbXBvcnQgJ0B0aGlyZHdlYi1kZXYvY29udHJhY3RzLWpzL2Rpc3QvYWJpcy9JRHJvcEVSQzIwX1YyLmpzb24nO1xuaW1wb3J0ICdAdGhpcmR3ZWItZGV2L2NvbnRyYWN0cy1qcy9kaXN0L2FiaXMvSURyb3BTaW5nbGVQaGFzZS5qc29uJztcbmltcG9ydCAnQHRoaXJkd2ViLWRldi9jb250cmFjdHMtanMvZGlzdC9hYmlzL0lEcm9wU2luZ2xlUGhhc2VfVjEuanNvbic7XG5pbXBvcnQgJ0B0aGlyZHdlYi1kZXYvY29udHJhY3RzLWpzL2Rpc3QvYWJpcy9JRVJDMjAuanNvbic7XG5pbXBvcnQgJ0B0aGlyZHdlYi1kZXYvY29udHJhY3RzLWpzL2Rpc3QvYWJpcy9JRVJDMjBQZXJtaXQuanNvbic7XG5pbXBvcnQgJ0B0aGlyZHdlYi1kZXYvY29udHJhY3RzLWpzL2Rpc3QvYWJpcy9JTWludGFibGVFUkMyMC5qc29uJztcbmltcG9ydCAnQHRoaXJkd2ViLWRldi9jb250cmFjdHMtanMvZGlzdC9hYmlzL0lNdWx0aWNhbGwuanNvbic7XG5pbXBvcnQgJ0B0aGlyZHdlYi1kZXYvY29udHJhY3RzLWpzL2Rpc3QvYWJpcy9JU2lnbmF0dXJlTWludEVSQzIwLmpzb24nO1xuaW1wb3J0ICdAdGhpcmR3ZWItZGV2L2NvbnRyYWN0cy1qcy9kaXN0L2FiaXMvSUJ1cm5hYmxlRVJDNzIxLmpzb24nO1xuaW1wb3J0ICdAdGhpcmR3ZWItZGV2L2NvbnRyYWN0cy1qcy9kaXN0L2FiaXMvSUNsYWltYWJsZUVSQzcyMS5qc29uJztcbmltcG9ydCAnQHRoaXJkd2ViLWRldi9jb250cmFjdHMtanMvZGlzdC9hYmlzL0lEZWxheWVkUmV2ZWFsLmpzb24nO1xuaW1wb3J0ICdAdGhpcmR3ZWItZGV2L2NvbnRyYWN0cy1qcy9kaXN0L2FiaXMvSURyb3BFUkM3MjFfVjMuanNvbic7XG5pbXBvcnQgJ0B0aGlyZHdlYi1kZXYvY29udHJhY3RzLWpzL2Rpc3QvYWJpcy9JRVJDNzIxLmpzb24nO1xuaW1wb3J0ICdAdGhpcmR3ZWItZGV2L2NvbnRyYWN0cy1qcy9kaXN0L2FiaXMvSUVSQzcyMUVudW1lcmFibGUuanNvbic7XG5pbXBvcnQgJ0B0aGlyZHdlYi1kZXYvY29udHJhY3RzLWpzL2Rpc3QvYWJpcy9JRVJDNzIxU3VwcGx5Lmpzb24nO1xuaW1wb3J0ICdAdGhpcmR3ZWItZGV2L2NvbnRyYWN0cy1qcy9kaXN0L2FiaXMvSUxhenlNaW50Lmpzb24nO1xuaW1wb3J0ICdAdGhpcmR3ZWItZGV2L2NvbnRyYWN0cy1qcy9kaXN0L2FiaXMvSU1pbnRhYmxlRVJDNzIxLmpzb24nO1xuaW1wb3J0ICdAdGhpcmR3ZWItZGV2L2NvbnRyYWN0cy1qcy9kaXN0L2FiaXMvSVNpZ25hdHVyZU1pbnRFUkM3MjEuanNvbic7XG5pbXBvcnQgJ0B0aGlyZHdlYi1kZXYvY29udHJhY3RzLWpzL2Rpc3QvYWJpcy9JU2lnbmF0dXJlTWludEVSQzcyMV9WMS5qc29uJztcbmltcG9ydCAnQHRoaXJkd2ViLWRldi9jb250cmFjdHMtanMvZGlzdC9hYmlzL0xhenlNaW50V2l0aFRpZXIuanNvbic7XG5pbXBvcnQgJ0B0aGlyZHdlYi1kZXYvY29udHJhY3RzLWpzL2Rpc3QvYWJpcy9JQnVybmFibGVFUkMxMTU1Lmpzb24nO1xuaW1wb3J0ICdAdGhpcmR3ZWItZGV2L2NvbnRyYWN0cy1qcy9kaXN0L2FiaXMvSUNsYWltYWJsZUVSQzExNTUuanNvbic7XG5pbXBvcnQgJ0B0aGlyZHdlYi1kZXYvY29udHJhY3RzLWpzL2Rpc3QvYWJpcy9JRHJvcDExNTUuanNvbic7XG5pbXBvcnQgJ0B0aGlyZHdlYi1kZXYvY29udHJhY3RzLWpzL2Rpc3QvYWJpcy9JRHJvcEVSQzExNTVfVjIuanNvbic7XG5pbXBvcnQgJ0B0aGlyZHdlYi1kZXYvY29udHJhY3RzLWpzL2Rpc3QvYWJpcy9JRHJvcFNpbmdsZVBoYXNlMTE1NS5qc29uJztcbmltcG9ydCAnQHRoaXJkd2ViLWRldi9jb250cmFjdHMtanMvZGlzdC9hYmlzL0lEcm9wU2luZ2xlUGhhc2UxMTU1X1YxLmpzb24nO1xuaW1wb3J0ICdAdGhpcmR3ZWItZGV2L2NvbnRyYWN0cy1qcy9kaXN0L2FiaXMvSUVSQzExNTUuanNvbic7XG5pbXBvcnQgJ0B0aGlyZHdlYi1kZXYvY29udHJhY3RzLWpzL2Rpc3QvYWJpcy9JRVJDMTE1NUVudW1lcmFibGUuanNvbic7XG5pbXBvcnQgJ0B0aGlyZHdlYi1kZXYvY29udHJhY3RzLWpzL2Rpc3QvYWJpcy9JTWludGFibGVFUkMxMTU1Lmpzb24nO1xuaW1wb3J0ICdAdGhpcmR3ZWItZGV2L2NvbnRyYWN0cy1qcy9kaXN0L2FiaXMvSVNpZ25hdHVyZU1pbnRFUkMxMTU1Lmpzb24nO1xuaW1wb3J0ICdAdGhpcmR3ZWItZGV2L2NvbnRyYWN0cy1qcy9kaXN0L2FiaXMvRVJDMjc3MUNvbnRleHQuanNvbic7XG5pbXBvcnQgJ0B0aGlyZHdlYi1kZXYvY29udHJhY3RzLWpzL2Rpc3QvYWJpcy9JQXBwVVJJLmpzb24nO1xuaW1wb3J0ICdAdGhpcmR3ZWItZGV2L2NvbnRyYWN0cy1qcy9kaXN0L2FiaXMvSUNvbnRyYWN0TWV0YWRhdGEuanNvbic7XG5pbXBvcnQgJ0B0aGlyZHdlYi1kZXYvY29udHJhY3RzLWpzL2Rpc3QvYWJpcy9JRGlyZWN0TGlzdGluZ3MuanNvbic7XG5pbXBvcnQgJ0B0aGlyZHdlYi1kZXYvY29udHJhY3RzLWpzL2Rpc3QvYWJpcy9JRW5nbGlzaEF1Y3Rpb25zLmpzb24nO1xuaW1wb3J0ICdAdGhpcmR3ZWItZGV2L2NvbnRyYWN0cy1qcy9kaXN0L2FiaXMvSU9mZmVycy5qc29uJztcbmltcG9ydCAnQHRoaXJkd2ViLWRldi9jb250cmFjdHMtanMvZGlzdC9hYmlzL0lQZXJtaXNzaW9ucy5qc29uJztcbmltcG9ydCAnQHRoaXJkd2ViLWRldi9jb250cmFjdHMtanMvZGlzdC9hYmlzL0lQZXJtaXNzaW9uc0VudW1lcmFibGUuanNvbic7XG5pbXBvcnQgJ0B0aGlyZHdlYi1kZXYvY29udHJhY3RzLWpzL2Rpc3QvYWJpcy9JUGxhdGZvcm1GZWUuanNvbic7XG5pbXBvcnQgJ0B0aGlyZHdlYi1kZXYvY29udHJhY3RzLWpzL2Rpc3QvYWJpcy9JUHJpbWFyeVNhbGUuanNvbic7XG5pbXBvcnQgJ0B0aGlyZHdlYi1kZXYvY29udHJhY3RzLWpzL2Rpc3QvYWJpcy9JUm95YWx0eS5qc29uJztcbmltcG9ydCAnQHRoaXJkd2ViLWRldi9jb250cmFjdHMtanMvZGlzdC9hYmlzL093bmFibGUuanNvbic7XG5pbXBvcnQgJ0B0aGlyZHdlYi1kZXYvY29udHJhY3RzLWpzL2Rpc3QvYWJpcy9JQWNjb3VudEZhY3RvcnkuanNvbic7XG5pbXBvcnQgJ0B0aGlyZHdlYi1kZXYvY29udHJhY3RzLWpzL2Rpc3QvYWJpcy9JQWNjb3VudC5qc29uJztcbmltcG9ydCAnQHRoaXJkd2ViLWRldi9jb250cmFjdHMtanMvZGlzdC9hYmlzL0lUaGlyZHdlYkNvbnRyYWN0Lmpzb24nO1xuaW1wb3J0ICdldGhlcnMvbGliL3V0aWxzLmpzJztcbmltcG9ydCAnbWVya2xldHJlZWpzJztcbmltcG9ydCAnZmFzdC1kZWVwLWVxdWFsJztcbmltcG9ydCAndXVpZCc7XG5pbXBvcnQgJ0B0aGlyZHdlYi1kZXYvY29udHJhY3RzLWpzL2Rpc3QvYWJpcy9JRVJDMTY1Lmpzb24nO1xuaW1wb3J0ICdAdGhpcmR3ZWItZGV2L2NvbnRyYWN0cy1qcy9kaXN0L2FiaXMvSUVSQzcyMU1ldGFkYXRhLmpzb24nO1xuaW1wb3J0ICdAdGhpcmR3ZWItZGV2L2NvbnRyYWN0cy1qcy9kaXN0L2FiaXMvSUVSQzExNTVNZXRhZGF0YS5qc29uJztcbmltcG9ydCAnQHRoaXJkd2ViLWRldi9jb250cmFjdHMtanMvZGlzdC9hYmlzL0lEZWxheWVkUmV2ZWFsRGVwcmVjYXRlZC5qc29uJztcbmltcG9ydCAnQHRoaXJkd2ViLWRldi9jb250cmFjdHMtanMvZGlzdC9hYmlzL0NvbnRyYWN0UHVibGlzaGVyLmpzb24nO1xuaW1wb3J0ICdAdGhpcmR3ZWItZGV2L2NvbnRyYWN0cy1qcy9kaXN0L2FiaXMvVFdNdWx0aWNoYWluUmVnaXN0cnlMb2dpYy5qc29uJztcbmltcG9ydCAnQHRoaXJkd2ViLWRldi9jb250cmFjdHMtanMvZGlzdC9hYmlzL1RXTXVsdGljaGFpblJlZ2lzdHJ5Um91dGVyLmpzb24nO1xuaW1wb3J0ICdAdGhpcmR3ZWItZGV2L2dlbmVyYXRlZC1hYmlzJztcbmltcG9ydCAnQHRoaXJkd2ViLWRldi9jb250cmFjdHMtanMvZGlzdC9hYmlzL1RXRmFjdG9yeS5qc29uJztcbmltcG9ydCAnQHRoaXJkd2ViLWRldi9jb250cmFjdHMtanMvZGlzdC9hYmlzL1RXUmVnaXN0cnkuanNvbic7XG5pbXBvcnQgJ2JzNTgnO1xuaW1wb3J0ICdldGhlcnMvbGliL3V0aWxzJztcbmltcG9ydCAnQHRoaXJkd2ViLWRldi9jb250cmFjdHMtanMvZGlzdC9hYmlzL0lFUkMyME1ldGFkYXRhLmpzb24nO1xuXG4vKipcbiAqIEBpbnRlcm5hbFxuICovXG5jb25zdCBDb21tb25XcmFwcGFibGVTY2hlbWEgPSB6Lm9iamVjdCh7XG4gIGNvbnRyYWN0QWRkcmVzczogQWRkcmVzc09yRW5zU2NoZW1hXG59KTtcblxuLyoqXG4gKiBAaW50ZXJuYWxcbiAqL1xuY29uc3QgRVJDMjBXcmFwcGFibGVTY2hlbWEgPSBDb21tb25XcmFwcGFibGVTY2hlbWEuZXh0ZW5kKHtcbiAgcXVhbnRpdHk6IEFtb3VudFNjaGVtYVxufSk7XG5cbi8qKlxuICogQGludGVybmFsXG4gKi9cbmNvbnN0IEVSQzcyMVdyYXBwYWJsZVNjaGVtYSA9IENvbW1vbldyYXBwYWJsZVNjaGVtYS5leHRlbmQoe1xuICB0b2tlbklkOiBCaWdOdW1iZXJpc2hTY2hlbWFcbn0pO1xuXG4vKipcbiAqIEBpbnRlcm5hbFxuICovXG5jb25zdCBFUkMxMTU1V3JhcHBhYmxlU2NoZW1hID0gQ29tbW9uV3JhcHBhYmxlU2NoZW1hLmV4dGVuZCh7XG4gIHRva2VuSWQ6IEJpZ051bWJlcmlzaFNjaGVtYSxcbiAgcXVhbnRpdHk6IEJpZ051bWJlcmlzaFNjaGVtYVxufSk7XG5cbi8qKlxuICogQGludGVybmFsXG4gKi9cbmNvbnN0IEVSQzIwUmV3YXJkU2NoZW1hID0gRVJDMjBXcmFwcGFibGVTY2hlbWEub21pdCh7XG4gIHF1YW50aXR5OiB0cnVlXG59KS5leHRlbmQoe1xuICBxdWFudGl0eVBlclJld2FyZDogQW1vdW50U2NoZW1hXG59KTtcblxuLyoqXG4gKiBAaW50ZXJuYWxcbiAqL1xuY29uc3QgRVJDNzIxUmV3YXJkU2NoZW1hID0gRVJDNzIxV3JhcHBhYmxlU2NoZW1hO1xuXG4vKipcbiAqIEBpbnRlcm5hbFxuICovXG5jb25zdCBFUkMxMTU1UmV3YXJkU2NoZW1hID0gRVJDMTE1NVdyYXBwYWJsZVNjaGVtYS5vbWl0KHtcbiAgcXVhbnRpdHk6IHRydWVcbn0pLmV4dGVuZCh7XG4gIHF1YW50aXR5UGVyUmV3YXJkOiBCaWdOdW1iZXJpc2hTY2hlbWFcbn0pO1xuXG4vKipcbiAqIEBpbnRlcm5hbFxuICovXG5jb25zdCBFUkMyMFJld2FyZENvbnRlbnRzU2NoZW1hID0gRVJDMjBSZXdhcmRTY2hlbWEuZXh0ZW5kKHtcbiAgdG90YWxSZXdhcmRzOiBCaWdOdW1iZXJpc2hTY2hlbWEuZGVmYXVsdChcIjFcIilcbn0pO1xuXG4vKipcbiAqIEBpbnRlcm5hbFxuICovXG5jb25zdCBFUkM3MjFSZXdhcmRDb250ZW50c1NjaGVtYSA9IEVSQzcyMVJld2FyZFNjaGVtYTtcblxuLyoqXG4gKiBAaW50ZXJuYWxcbiAqL1xuY29uc3QgRVJDMTE1NVJld2FyZENvbnRlbnRzU2NoZW1hID0gRVJDMTE1NVJld2FyZFNjaGVtYS5leHRlbmQoe1xuICB0b3RhbFJld2FyZHM6IEJpZ051bWJlcmlzaFNjaGVtYS5kZWZhdWx0KFwiMVwiKVxufSk7XG5cbi8qKlxuICogQGludGVybmFsXG4gKi9cbnoub2JqZWN0KHtcbiAgZXJjMjBSZXdhcmRzOiB6LmFycmF5KEVSQzIwUmV3YXJkU2NoZW1hKS5kZWZhdWx0KFtdKSxcbiAgZXJjNzIxUmV3YXJkczogei5hcnJheShFUkM3MjFSZXdhcmRTY2hlbWEpLmRlZmF1bHQoW10pLFxuICBlcmMxMTU1UmV3YXJkczogei5hcnJheShFUkMxMTU1UmV3YXJkU2NoZW1hKS5kZWZhdWx0KFtdKVxufSk7XG5cbi8qKlxuICogQGludGVybmFsXG4gKi9cbmNvbnN0IFBhY2tSZXdhcmRzT3V0cHV0U2NoZW1hID0gei5vYmplY3Qoe1xuICBlcmMyMFJld2FyZHM6IHouYXJyYXkoRVJDMjBSZXdhcmRDb250ZW50c1NjaGVtYSkuZGVmYXVsdChbXSksXG4gIGVyYzcyMVJld2FyZHM6IHouYXJyYXkoRVJDNzIxUmV3YXJkQ29udGVudHNTY2hlbWEpLmRlZmF1bHQoW10pLFxuICBlcmMxMTU1UmV3YXJkczogei5hcnJheShFUkMxMTU1UmV3YXJkQ29udGVudHNTY2hlbWEpLmRlZmF1bHQoW10pXG59KTtcblxuLyoqXG4gKiBAaW50ZXJuYWxcbiAqL1xuY29uc3QgUGFja01ldGFkYXRhSW5wdXRTY2hlbWEgPSBQYWNrUmV3YXJkc091dHB1dFNjaGVtYS5leHRlbmQoe1xuICBwYWNrTWV0YWRhdGE6IE5GVElucHV0T3JVcmlTY2hlbWEsXG4gIHJld2FyZHNQZXJQYWNrOiBCaWdOdW1iZXJpc2hTY2hlbWEuZGVmYXVsdChcIjFcIiksXG4gIG9wZW5TdGFydFRpbWU6IFJhd0RhdGVTY2hlbWEuZGVmYXVsdChuZXcgRGF0ZSgpKVxufSk7XG5cbi8qKlxuICogQHB1YmxpY1xuICovXG5cbmNsYXNzIFBhY2tWUkYge1xuICBjb25zdHJ1Y3RvcihuZXR3b3JrLCBhZGRyZXNzLCBzdG9yYWdlLCBvcHRpb25zLCBjaGFpbklkKSB7XG4gICAgdmFyIF90aGlzID0gdGhpcztcbiAgICBsZXQgY29udHJhY3RXcmFwcGVyID0gYXJndW1lbnRzLmxlbmd0aCA+IDUgJiYgYXJndW1lbnRzWzVdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbNV0gOiBuZXcgQ29udHJhY3RXcmFwcGVyKG5ldHdvcmssIGFkZHJlc3MsIElQYWNrVlJGQWJpLCBvcHRpb25zKTtcbiAgICBfZGVmaW5lUHJvcGVydHkodGhpcywgXCJmZWF0dXJlTmFtZVwiLCBGRUFUVVJFX1BBQ0tfVlJGLm5hbWUpO1xuICAgIF9kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcImNvbnRyYWN0V3JhcHBlclwiLCB2b2lkIDApO1xuICAgIF9kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcInN0b3JhZ2VcIiwgdm9pZCAwKTtcbiAgICBfZGVmaW5lUHJvcGVydHkodGhpcywgXCJjaGFpbklkXCIsIHZvaWQgMCk7XG4gICAgX2RlZmluZVByb3BlcnR5KHRoaXMsIFwiZXZlbnRzXCIsIHZvaWQgMCk7XG4gICAgLyoqXG4gICAgICogT3BlbiBwYWNrXG4gICAgICpcbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGBgYGphdmFzY3JpcHRcbiAgICAgKiBjb25zdCB0b2tlbklkID0gMDtcbiAgICAgKiBjb25zdCBhbW91bnQgPSAxO1xuICAgICAqIGNvbnN0IHJlY2VpcHQgPSBhd2FpdCBjb250cmFjdC5wYWNrLm9wZW4odG9rZW5JZCwgYW1vdW50KTtcbiAgICAgKiBgYGBcbiAgICAgKlxuICAgICAqIEByZW1hcmtzIE9wZW4gYSBwYWNrIHVzaW5nIENoYWlubGluayBWUkZzIHJhbmRvbSBudW1iZXIgZ2VuZXJhdGlvblxuICAgICAqIEByZW1hcmtzIFRoaXMgd2lsbCByZXR1cm4gYSB0cmFuc2FjdGlvbiByZXN1bHQgd2l0aCB0aGUgcmVxdWVzdElkIG9mIHRoZSBvcGVuIHJlcXVlc3QsIE5PVCB0aGUgY29udGVudHMgb2YgdGhlIHBhY2tcbiAgICAgKiBAcmVtYXJrcyBUbyBnZXQgdGhlIGNvbnRlbnRzIG9mIHRoZSBwYWNrLCB5b3UgbXVzdCBjYWxsIGNsYWltUmV3YXJkcyBvbmNlIHRoZSBWUkYgcmVxdWVzdCBoYXMgYmVlbiBmdWxmaWxsZWRcbiAgICAgKiBAcmVtYXJrcyBZb3UgY2FuIHVzZSB0aGUgY2FuQ2xhaW1SZXdhcmRzIG1ldGhvZCB0byBjaGVjayBpZiB0aGUgVlJGIHJlcXVlc3QgaGFzIGJlZW4gZnVsZmlsbGVkXG4gICAgICogQHBhcmFtIHRva2VuSWRcbiAgICAgKiBAcGFyYW0gYW1vdW50XG4gICAgICogQHJldHVybnNcbiAgICAgKiBAdHdmZWF0dXJlIFBhY2tWUkZcbiAgICAgKi9cbiAgICBfZGVmaW5lUHJvcGVydHkodGhpcywgXCJvcGVuXCIsIGJ1aWxkVHJhbnNhY3Rpb25GdW5jdGlvbihhc3luYyBmdW5jdGlvbiAodG9rZW5JZCkge1xuICAgICAgbGV0IGFtb3VudCA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDogMTtcbiAgICAgIGxldCBnYXNMaW1pdCA9IGFyZ3VtZW50cy5sZW5ndGggPiAyICYmIGFyZ3VtZW50c1syXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzJdIDogNTAwMDAwO1xuICAgICAgcmV0dXJuIFRyYW5zYWN0aW9uLmZyb21Db250cmFjdFdyYXBwZXIoe1xuICAgICAgICBjb250cmFjdFdyYXBwZXI6IF90aGlzLmNvbnRyYWN0V3JhcHBlcixcbiAgICAgICAgbWV0aG9kOiBcIm9wZW5QYWNrXCIsXG4gICAgICAgIGFyZ3M6IFt0b2tlbklkLCBhbW91bnRdLFxuICAgICAgICBvdmVycmlkZXM6IHtcbiAgICAgICAgICAvLyBIaWdoZXIgZ2FzIGxpbWl0IGZvciBvcGVuaW5nIHBhY2tzXG4gICAgICAgICAgZ2FzTGltaXRcbiAgICAgICAgfSxcbiAgICAgICAgcGFyc2U6IHJlY2VpcHQgPT4ge1xuICAgICAgICAgIGxldCBpZCA9IEJpZ051bWJlci5mcm9tKDApO1xuICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICBjb25zdCBldmVudCA9IF90aGlzLmNvbnRyYWN0V3JhcHBlci5wYXJzZUxvZ3MoXCJQYWNrT3BlblJlcXVlc3RlZFwiLCByZWNlaXB0Py5sb2dzKTtcbiAgICAgICAgICAgIGlkID0gZXZlbnRbMF0uYXJncy5yZXF1ZXN0SWQ7XG4gICAgICAgICAgfSBjYXRjaCAoZSkge31cbiAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgcmVjZWlwdCxcbiAgICAgICAgICAgIGlkXG4gICAgICAgICAgfTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfSkpO1xuICAgIC8qKlxuICAgICAqIENsYWltIHRoZSByZXdhcmRzIGZyb20gYW4gb3BlbmVkIHBhY2tcbiAgICAgKlxuICAgICAqIEBleGFtcGxlXG4gICAgICogYGBgamF2YXNjcmlwdFxuICAgICAqIGNvbnN0IHJld2FyZHMgPSBhd2FpdCBjb250cmFjdC5wYWNrLmNsYWltUmV3YXJkcygpO1xuICAgICAqIGBgYFxuICAgICAqXG4gICAgICogQHJlbWFya3MgVGhpcyB3aWxsIHJldHVybiB0aGUgY29udGVudHMgb2YgdGhlIHBhY2tcbiAgICAgKiBAcmVtYXJrcyBNYWtlIHN1cmUgdG8gY2hlY2sgaWYgdGhlIFZSRiByZXF1ZXN0IGhhcyBiZWVuIGZ1bGZpbGxlZCB1c2luZyBjYW5DbGFpbVJld2FyZHMoKSBiZWZvcmUgY2FsbGluZyB0aGlzIG1ldGhvZFxuICAgICAqIEByZXR1cm5zIHRoZSByYW5kb20gcmV3YXJkcyBmcm9tIG9wZW5pbmcgYSBwYWNrXG4gICAgICogQHR3ZmVhdHVyZSBQYWNrVlJGXG4gICAgICovXG4gICAgX2RlZmluZVByb3BlcnR5KHRoaXMsIFwiY2xhaW1SZXdhcmRzXCIsIGJ1aWxkVHJhbnNhY3Rpb25GdW5jdGlvbihhc3luYyBmdW5jdGlvbiAoKSB7XG4gICAgICBsZXQgZ2FzTGltaXQgPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IDUwMDAwMDtcbiAgICAgIHJldHVybiBUcmFuc2FjdGlvbi5mcm9tQ29udHJhY3RXcmFwcGVyKHtcbiAgICAgICAgY29udHJhY3RXcmFwcGVyOiBfdGhpcy5jb250cmFjdFdyYXBwZXIsXG4gICAgICAgIG1ldGhvZDogXCJjbGFpbVJld2FyZHNcIixcbiAgICAgICAgYXJnczogW10sXG4gICAgICAgIG92ZXJyaWRlczoge1xuICAgICAgICAgIC8vIEhpZ2hlciBnYXMgbGltaXQgZm9yIG9wZW5pbmcgcGFja3NcbiAgICAgICAgICBnYXNMaW1pdFxuICAgICAgICB9LFxuICAgICAgICBwYXJzZTogYXN5bmMgcmVjZWlwdCA9PiB7XG4gICAgICAgICAgY29uc3QgZXZlbnQgPSBfdGhpcy5jb250cmFjdFdyYXBwZXIucGFyc2VMb2dzKFwiUGFja09wZW5lZFwiLCByZWNlaXB0Py5sb2dzKTtcbiAgICAgICAgICBpZiAoZXZlbnQubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJQYWNrT3BlbmVkIGV2ZW50IG5vdCBmb3VuZFwiKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgY29uc3QgcmV3YXJkcyA9IGV2ZW50WzBdLmFyZ3MucmV3YXJkVW5pdHNEaXN0cmlidXRlZDtcbiAgICAgICAgICByZXR1cm4gYXdhaXQgX3RoaXMucGFyc2VSZXdhcmRzKHJld2FyZHMpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9KSk7XG4gICAgdGhpcy5jb250cmFjdFdyYXBwZXIgPSBjb250cmFjdFdyYXBwZXI7XG4gICAgdGhpcy5zdG9yYWdlID0gc3RvcmFnZTtcbiAgICB0aGlzLmNoYWluSWQgPSBjaGFpbklkO1xuICAgIHRoaXMuZXZlbnRzID0gbmV3IENvbnRyYWN0RXZlbnRzKHRoaXMuY29udHJhY3RXcmFwcGVyKTtcbiAgfVxuICBvbk5ldHdvcmtVcGRhdGVkKG5ldHdvcmspIHtcbiAgICB0aGlzLmNvbnRyYWN0V3JhcHBlci51cGRhdGVTaWduZXJPclByb3ZpZGVyKG5ldHdvcmspO1xuICB9XG4gIGdldEFkZHJlc3MoKSB7XG4gICAgcmV0dXJuIHRoaXMuY29udHJhY3RXcmFwcGVyLnJlYWRDb250cmFjdC5hZGRyZXNzO1xuICB9XG4gIGFzeW5jIHBhcnNlUmV3YXJkcyhyZXdhcmRzKSB7XG4gICAgY29uc3QgZXJjMjBSZXdhcmRzID0gW107XG4gICAgY29uc3QgZXJjNzIxUmV3YXJkcyA9IFtdO1xuICAgIGNvbnN0IGVyYzExNTVSZXdhcmRzID0gW107XG4gICAgZm9yIChjb25zdCByZXdhcmQgb2YgcmV3YXJkcykge1xuICAgICAgc3dpdGNoIChyZXdhcmQudG9rZW5UeXBlKSB7XG4gICAgICAgIGNhc2UgMDpcbiAgICAgICAgICB7XG4gICAgICAgICAgICBjb25zdCB0b2tlbk1ldGFkYXRhID0gYXdhaXQgZmV0Y2hDdXJyZW5jeU1ldGFkYXRhKHRoaXMuY29udHJhY3RXcmFwcGVyLmdldFByb3ZpZGVyKCksIHJld2FyZC5hc3NldENvbnRyYWN0KTtcbiAgICAgICAgICAgIGVyYzIwUmV3YXJkcy5wdXNoKHtcbiAgICAgICAgICAgICAgY29udHJhY3RBZGRyZXNzOiByZXdhcmQuYXNzZXRDb250cmFjdCxcbiAgICAgICAgICAgICAgcXVhbnRpdHlQZXJSZXdhcmQ6IGV0aGVycy51dGlscy5mb3JtYXRVbml0cyhyZXdhcmQudG90YWxBbW91bnQsIHRva2VuTWV0YWRhdGEuZGVjaW1hbHMpLnRvU3RyaW5nKClcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgfVxuICAgICAgICBjYXNlIDE6XG4gICAgICAgICAge1xuICAgICAgICAgICAgZXJjNzIxUmV3YXJkcy5wdXNoKHtcbiAgICAgICAgICAgICAgY29udHJhY3RBZGRyZXNzOiByZXdhcmQuYXNzZXRDb250cmFjdCxcbiAgICAgICAgICAgICAgdG9rZW5JZDogcmV3YXJkLnRva2VuSWQudG9TdHJpbmcoKVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICB9XG4gICAgICAgIGNhc2UgMjpcbiAgICAgICAgICB7XG4gICAgICAgICAgICBlcmMxMTU1UmV3YXJkcy5wdXNoKHtcbiAgICAgICAgICAgICAgY29udHJhY3RBZGRyZXNzOiByZXdhcmQuYXNzZXRDb250cmFjdCxcbiAgICAgICAgICAgICAgdG9rZW5JZDogcmV3YXJkLnRva2VuSWQudG9TdHJpbmcoKSxcbiAgICAgICAgICAgICAgcXVhbnRpdHlQZXJSZXdhcmQ6IHJld2FyZC50b3RhbEFtb3VudC50b1N0cmluZygpXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgIGVyYzIwUmV3YXJkcyxcbiAgICAgIGVyYzcyMVJld2FyZHMsXG4gICAgICBlcmMxMTU1UmV3YXJkc1xuICAgIH07XG4gIH1cblxuICAvKipcbiAgICogU2V0dXAgYSBsaXN0ZW5lciBmb3Igd2hlbiBhIHBhY2sgaXMgb3BlbmVkXG4gICAqXG4gICAqIEBleGFtcGxlXG4gICAqIGBgYGphdmFzY3JpcHRcbiAgICogY29uc3QgdW5zdWJzY3JpYmUgPSBhd2FpdCBjb250cmFjdC5wYWNrLmFkZFBhY2tPcGVuRXZlbnRMaXN0ZW5lcigocGFja0lkLCBvcGVuZXJBZGRyZXNzLCByZXdhcmRzKSA9PiB7XG4gICAqICBjb25zb2xlLmxvZyhgUGFjayAke3BhY2tJZH0gd2FzIG9wZW5lZCBieSAke29wZW5lckFkZHJlc3N9IGFuZCBjb250YWluZWQ6YCwgcmV3YXJkcyk7XG4gICAqIH0pO1xuICAgKiBAcGFyYW0gY2FsbGJhY2sgdGhlIGxpc3RlbmVyIHRvIGNhbGwgd2hlbiBhIHBhY2sgaXMgb3BlbmVkXG4gICAqIEByZXR1cm5zIGEgdW5zdWJzY3JpYmUgZnVuY3Rpb24gdG8gY2xlYW51cCB0aGUgbGlzdGVuZXJcbiAgICogQHR3ZmVhdHVyZSBQYWNrVlJGXG4gICAqL1xuICBhc3luYyBhZGRQYWNrT3BlbkV2ZW50TGlzdGVuZXIoY2FsbGJhY2spIHtcbiAgICByZXR1cm4gdGhpcy5ldmVudHMuYWRkRXZlbnRMaXN0ZW5lcihcIlBhY2tPcGVuZWRcIiwgYXN5bmMgZXZlbnQgPT4ge1xuICAgICAgY2FsbGJhY2soZXZlbnQuZGF0YS5wYWNrSWQudG9TdHJpbmcoKSwgZXZlbnQuZGF0YS5vcGVuZXIsIGF3YWl0IHRoaXMucGFyc2VSZXdhcmRzKGV2ZW50LmRhdGEucmV3YXJkVW5pdHNEaXN0cmlidXRlZCkpO1xuICAgIH0pO1xuICB9XG5cbiAgLyoqXG4gICAqIENoZWNrIGlmIGEgc3BlY2lmaWMgd2FsbGV0IGNhbiBjbGFpbSByZXdhcmRzIGFmdGVyIG9wZW5pbmcgYSBwYWNrXG4gICAqXG4gICAqIEBleGFtcGxlXG4gICAqIGBgYGphdmFzY3JpcHRcbiAgICogY29uc3QgY2FuQ2xhaW0gPSBhd2FpdCBjb250cmFjdC5wYWNrLmNhbkNsYWltUmV3YXJkcyhcInt7d2FsbGV0X2FkZHJlc3N9fVwiKTtcbiAgICogYGBgXG4gICAqIEBwYXJhbSBjbGFpbWVyQWRkcmVzcyBPcHRpb25hbDogdGhlIGFkZHJlc3MgdG8gY2hlY2sgaWYgdGhleSBjYW4gY2xhaW0gcmV3YXJkcywgZGVmYXVsdHMgdG8gdGhlIGNvbm5lY3RlZCBhZGRyZXNzXG4gICAqIEByZXR1cm5zIHdoZXRoZXIgdGhlIGNvbm5lY3RlZCBhZGRyZXNzIGNhbiBjbGFpbSByZXdhcmRzIGFmdGVyIG9wZW5pbmcgYSBwYWNrXG4gICAqIEB0d2ZlYXR1cmUgUGFja1ZSRlxuICAgKi9cbiAgYXN5bmMgY2FuQ2xhaW1SZXdhcmRzKGNsYWltZXJBZGRyZXNzKSB7XG4gICAgY29uc3QgYWRkcmVzcyA9IGF3YWl0IHJlc29sdmVBZGRyZXNzKGNsYWltZXJBZGRyZXNzIHx8IChhd2FpdCB0aGlzLmNvbnRyYWN0V3JhcHBlci5nZXRTaWduZXJBZGRyZXNzKCkpKTtcbiAgICByZXR1cm4gYXdhaXQgdGhpcy5jb250cmFjdFdyYXBwZXIucmVhZENvbnRyYWN0LmNhbkNsYWltUmV3YXJkcyhhZGRyZXNzKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBPcGVuIGEgcGFjayBhbmQgY2xhaW0gdGhlIHJld2FyZHNcbiAgICogQHJlbWFya3MgVGhpcyBmdW5jdGlvbiB3aWxsIG9ubHkgc3RhcnQgdGhlIGZsb3cgb2Ygb3BlbmluZyBhIHBhY2ssIHRoZSByZXdhcmRzIHdpbGwgYmUgZ3JhbnRlZCBhdXRvbWF0aWNhbGx5IHRvIHRoZSBjb25uZWN0ZWQgYWRkcmVzcyBhZnRlciBWUkYgcmVxdWVzdCBpcyBmdWxmaWxsZWRcbiAgICpcbiAgICogQGV4YW1wbGVcbiAgICogYGBgamF2YXNjcmlwdFxuICAgKiBjb25zdCBwYWNrSWQgPSAwO1xuICAgKiBjb25zdCBhbW91bnQgPSAxO1xuICAgKiBjb25zdCB7IGlkIH0gPSBhd2FpdCBjb250cmFjdC5wYWNrLm9wZW5BbmRDbGFpbShwYWNrSWQsIGFtb3VudCk7XG4gICAqIGBgYFxuICAgKlxuICAgKiBAcGFyYW0gcGFja0lkIFRoZSBpZCBvZiB0aGUgcGFjayB0byBvcGVuXG4gICAqIEBwYXJhbSBhbW91bnQgT3B0aW9uYWw6IHRoZSBhbW91bnQgb2YgcGFja3MgdG8gb3BlbiwgZGVmYXVsdHMgdG8gMVxuICAgKiBAcGFyYW0gZ2FzTGltaXQgT3B0aW9uYWw6IHRoZSBnYXMgbGltaXQgdG8gdXNlIGZvciB0aGUgVlJGIGNhbGxiYWNrIHRyYW5zYWN0aW9uLCBkZWZhdWx0cyB0byA1MDAwMDBcbiAgICogQHJldHVybnNcbiAgICogQHR3ZmVhdHVyZSBQYWNrVlJGXG4gICAqL1xuICBhc3luYyBvcGVuQW5kQ2xhaW0ocGFja0lkKSB7XG4gICAgbGV0IGFtb3VudCA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDogMTtcbiAgICBsZXQgZ2FzTGltaXQgPSBhcmd1bWVudHMubGVuZ3RoID4gMiAmJiBhcmd1bWVudHNbMl0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1syXSA6IDUwMDAwMDtcbiAgICBjb25zdCByZWNlaXB0ID0gYXdhaXQgdGhpcy5jb250cmFjdFdyYXBwZXIuc2VuZFRyYW5zYWN0aW9uKFwib3BlblBhY2tBbmRDbGFpbVJld2FyZHNcIiwgW3BhY2tJZCwgYW1vdW50LCBnYXNMaW1pdF0sIHtcbiAgICAgIC8vIEhpZ2hlciBnYXMgbGltaXQgZm9yIG9wZW5pbmcgcGFja3NcbiAgICAgIGdhc0xpbWl0OiBCaWdOdW1iZXIuZnJvbSg1MDAwMDApXG4gICAgfSk7XG4gICAgbGV0IGlkID0gQmlnTnVtYmVyLmZyb20oMCk7XG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IGV2ZW50ID0gdGhpcy5jb250cmFjdFdyYXBwZXIucGFyc2VMb2dzKFwiUGFja09wZW5SZXF1ZXN0ZWRcIiwgcmVjZWlwdD8ubG9ncyk7XG4gICAgICBpZCA9IGV2ZW50WzBdLmFyZ3MucmVxdWVzdElkO1xuICAgIH0gY2F0Y2ggKGUpIHt9XG4gICAgcmV0dXJuIHtcbiAgICAgIHJlY2VpcHQsXG4gICAgICBpZFxuICAgIH07XG4gIH1cblxuICAvKipcbiAgICogR2V0IHRoZSBMSU5LIGJhbGFuY2Ugb2YgdGhlIGNvbnRyYWN0XG4gICAqXG4gICAqIEBleGFtcGxlXG4gICAqIGBgYGphdmFzY3JpcHRcbiAgICogY29uc3QgYmFsYW5jZSA9IGF3YWl0IGNvbnRyYWN0LnBhY2suZ2V0TGlua0JhbGFuY2UoKTtcbiAgICogYGBgXG4gICAqXG4gICAqIEByZXR1cm5zIHRoZSBiYWxhbmNlIG9mIExJTksgaW4gdGhlIGNvbnRyYWN0XG4gICAqIEB0d2ZlYXR1cmUgUGFja1ZSRlxuICAgKi9cbiAgYXN5bmMgZ2V0TGlua0JhbGFuY2UoKSB7XG4gICAgcmV0dXJuIHRoaXMuZ2V0TGlua0NvbnRyYWN0KCkuYmFsYW5jZU9mKHRoaXMuY29udHJhY3RXcmFwcGVyLnJlYWRDb250cmFjdC5hZGRyZXNzKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBUcmFuc2ZlciBMSU5LIHRvIHRoaXMgY29udHJhY3RcbiAgICpcbiAgICogQGV4YW1wbGVcbiAgICogYGBgamF2YXNjcmlwdFxuICAgKiBjb25zdCBhbW91bnQgPSAxO1xuICAgKiBhd2FpdCBjb250cmFjdC5wYWNrLnRyYW5zZmVyTGluayhhbW91bnQpO1xuICAgKiBgYGBcbiAgICpcbiAgICogQHBhcmFtIGFtb3VudCB0aGUgYW1vdW50IG9mIExJTksgdG8gdHJhbnNmZXIgdG8gdGhlIGNvbnRyYWN0XG4gICAqIEB0d2ZlYXR1cmUgUGFja1ZSRlxuICAgKi9cbiAgYXN5bmMgdHJhbnNmZXJMaW5rKGFtb3VudCkge1xuICAgIGF3YWl0IHRoaXMuZ2V0TGlua0NvbnRyYWN0KCkudHJhbnNmZXIodGhpcy5jb250cmFjdFdyYXBwZXIucmVhZENvbnRyYWN0LmFkZHJlc3MsIGFtb3VudCk7XG4gIH1cbiAgZ2V0TGlua0NvbnRyYWN0KCkge1xuICAgIGNvbnN0IGxpbmtBZGRyZXNzID0gTElOS19UT0tFTl9BRERSRVNTW3RoaXMuY2hhaW5JZF07XG4gICAgaWYgKCFsaW5rQWRkcmVzcykge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKGBObyBMSU5LIHRva2VuIGFkZHJlc3MgZm91bmQgZm9yIGNoYWluSWQgJHt0aGlzLmNoYWluSWR9YCk7XG4gICAgfVxuICAgIGNvbnN0IGNvbnRyYWN0ID0gbmV3IENvbnRyYWN0V3JhcHBlcih0aGlzLmNvbnRyYWN0V3JhcHBlci5nZXRTaWduZXJPclByb3ZpZGVyKCksIGxpbmtBZGRyZXNzLCBFUkMyMEFiaSwgdGhpcy5jb250cmFjdFdyYXBwZXIub3B0aW9ucyk7XG4gICAgcmV0dXJuIG5ldyBFcmMyMChjb250cmFjdCwgdGhpcy5zdG9yYWdlLCB0aGlzLmNoYWluSWQpO1xuICB9XG59XG5cbi8qKlxuICogQ3JlYXRlIGxvb3Rib3hlcyBvZiBORlRzIHdpdGggcmFyaXR5IGJhc2VkIG9wZW4gbWVjaGFuaWNzLlxuICpcbiAqIEBleGFtcGxlXG4gKlxuICogYGBgamF2YXNjcmlwdFxuICogaW1wb3J0IHsgVGhpcmR3ZWJTREsgfSBmcm9tIFwiQHRoaXJkd2ViLWRldi9zZGtcIjtcbiAqXG4gKiBjb25zdCBzZGsgPSBuZXcgVGhpcmR3ZWJTREsoXCJ7e2NoYWluTmFtZX19XCIpO1xuICogY29uc3QgY29udHJhY3QgPSBhd2FpdCBzZGsuZ2V0Q29udHJhY3QoXCJ7e2NvbnRyYWN0X2FkZHJlc3N9fVwiLCBcInBhY2tcIik7XG4gKiBgYGBcbiAqXG4gKiBAcHVibGljXG4gKi9cbmNsYXNzIFBhY2sgZXh0ZW5kcyBTdGFuZGFyZEVyYzExNTUge1xuICAvKipcbiAgICogQ29uZmlndXJlIHJveWFsdGllc1xuICAgKiBAcmVtYXJrcyBTZXQgeW91ciBvd24gcm95YWx0aWVzIGZvciB0aGUgZW50aXJlIGNvbnRyYWN0IG9yIHBlciBwYWNrXG4gICAqIEBleGFtcGxlXG4gICAqIGBgYGphdmFzY3JpcHRcbiAgICogLy8gcm95YWx0aWVzIG9uIHRoZSB3aG9sZSBjb250cmFjdFxuICAgKiBjb250cmFjdC5yb3lhbHRpZXMuc2V0RGVmYXVsdFJveWFsdHlJbmZvKHtcbiAgICogICBzZWxsZXJfZmVlX2Jhc2lzX3BvaW50czogMTAwLCAvLyAxJVxuICAgKiAgIGZlZV9yZWNpcGllbnQ6IFwiMHguLi5cIlxuICAgKiB9KTtcbiAgICogLy8gb3ZlcnJpZGUgcm95YWx0eSBmb3IgYSBwYXJ0aWN1bGFyIHBhY2tcbiAgICogY29udHJhY3Qucm95YWx0aWVzLnNldFRva2VuUm95YWx0eUluZm8ocGFja0lkLCB7XG4gICAqICAgc2VsbGVyX2ZlZV9iYXNpc19wb2ludHM6IDUwMCwgLy8gNSVcbiAgICogICBmZWVfcmVjaXBpZW50OiBcIjB4Li4uXCJcbiAgICogfSk7XG4gICAqIGBgYFxuICAgKi9cblxuICAvKipcbiAgICogQGludGVybmFsXG4gICAqL1xuXG4gIC8qKlxuICAgKiBJZiBlbmFibGVkIGluIHRoZSBjb250cmFjdCwgdXNlIHRoZSBDaGFpbmxpbmsgVlJGIGZ1bmN0aW9uYWxpdHkgdG8gb3BlbiBwYWNrc1xuICAgKi9cbiAgZ2V0IHZyZigpIHtcbiAgICByZXR1cm4gYXNzZXJ0RW5hYmxlZCh0aGlzLl92cmYsIEZFQVRVUkVfUEFDS19WUkYpO1xuICB9XG4gIGNvbnN0cnVjdG9yKG5ldHdvcmssIGFkZHJlc3MsIHN0b3JhZ2UpIHtcbiAgICB2YXIgX3RoaXM7XG4gICAgbGV0IG9wdGlvbnMgPSBhcmd1bWVudHMubGVuZ3RoID4gMyAmJiBhcmd1bWVudHNbM10gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1szXSA6IHt9O1xuICAgIGxldCBhYmkgPSBhcmd1bWVudHMubGVuZ3RoID4gNCA/IGFyZ3VtZW50c1s0XSA6IHVuZGVmaW5lZDtcbiAgICBsZXQgY2hhaW5JZCA9IGFyZ3VtZW50cy5sZW5ndGggPiA1ID8gYXJndW1lbnRzWzVdIDogdW5kZWZpbmVkO1xuICAgIGxldCBjb250cmFjdFdyYXBwZXIgPSBhcmd1bWVudHMubGVuZ3RoID4gNiAmJiBhcmd1bWVudHNbNl0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1s2XSA6IG5ldyBDb250cmFjdFdyYXBwZXIobmV0d29yaywgYWRkcmVzcywgYWJpLCBvcHRpb25zLmdhc2xlc3MgJiYgXCJvcGVuemVwcGVsaW5cIiBpbiBvcHRpb25zLmdhc2xlc3MgPyB7XG4gICAgICAuLi5vcHRpb25zLFxuICAgICAgZ2FzbGVzczoge1xuICAgICAgICAuLi5vcHRpb25zLmdhc2xlc3MsXG4gICAgICAgIG9wZW56ZXBwZWxpbjoge1xuICAgICAgICAgIC4uLm9wdGlvbnMuZ2FzbGVzcy5vcGVuemVwcGVsaW4sXG4gICAgICAgICAgdXNlRU9BRm9yd2FyZGVyOiB0cnVlXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9IDogb3B0aW9ucyk7XG4gICAgc3VwZXIoY29udHJhY3RXcmFwcGVyLCBzdG9yYWdlLCBjaGFpbklkKTtcbiAgICBfdGhpcyA9IHRoaXM7XG4gICAgX2RlZmluZVByb3BlcnR5KHRoaXMsIFwiYWJpXCIsIHZvaWQgMCk7XG4gICAgX2RlZmluZVByb3BlcnR5KHRoaXMsIFwibWV0YWRhdGFcIiwgdm9pZCAwKTtcbiAgICBfZGVmaW5lUHJvcGVydHkodGhpcywgXCJhcHBcIiwgdm9pZCAwKTtcbiAgICBfZGVmaW5lUHJvcGVydHkodGhpcywgXCJyb2xlc1wiLCB2b2lkIDApO1xuICAgIF9kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcImVuY29kZXJcIiwgdm9pZCAwKTtcbiAgICBfZGVmaW5lUHJvcGVydHkodGhpcywgXCJldmVudHNcIiwgdm9pZCAwKTtcbiAgICBfZGVmaW5lUHJvcGVydHkodGhpcywgXCJlc3RpbWF0b3JcIiwgdm9pZCAwKTtcbiAgICBfZGVmaW5lUHJvcGVydHkodGhpcywgXCJyb3lhbHRpZXNcIiwgdm9pZCAwKTtcbiAgICBfZGVmaW5lUHJvcGVydHkodGhpcywgXCJpbnRlcmNlcHRvclwiLCB2b2lkIDApO1xuICAgIF9kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcIm93bmVyXCIsIHZvaWQgMCk7XG4gICAgX2RlZmluZVByb3BlcnR5KHRoaXMsIFwiX3ZyZlwiLCB2b2lkIDApO1xuICAgIC8qKiAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcbiAgICAgKiBXUklURSBGVU5DVElPTlNcbiAgICAgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbiAgICAvKipcbiAgICAgKiBDcmVhdGUgUGFja1xuICAgICAqIEByZW1hcmtzIENyZWF0ZSBhIG5ldyBwYWNrIHdpdGggdGhlIGdpdmVuIG1ldGFkYXRhIGFuZCByZXdhcmRzIGFuZCBtaW50IGl0IHRvIHRoZSBjb25uZWN0ZWQgd2FsbGV0LlxuICAgICAqIEByZW1hcmtzIFNlZSB7QGxpbmsgUGFjay5jcmVhdGVUb31cbiAgICAgKlxuICAgICAqIEBwYXJhbSBtZXRhZGF0YVdpdGhSZXdhcmRzIC0gdGhlIG1ldGFkYXRhIGFuZCByZXdhcmRzIHRvIGluY2x1ZGUgaW4gdGhlIHBhY2tcbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGBgYGphdmFzY3JpcHRcbiAgICAgKiBjb25zdCBwYWNrID0ge1xuICAgICAqICAgLy8gVGhlIG1ldGFkYXRhIGZvciB0aGUgcGFjayBORlQgaXRzZWxmXG4gICAgICogICBwYWNrTWV0YWRhdGE6IHtcbiAgICAgKiAgICAgbmFtZTogXCJNeSBQYWNrXCIsXG4gICAgICogICAgIGRlc2NyaXB0aW9uOiBcIlRoaXMgaXMgYSBuZXcgcGFja1wiLFxuICAgICAqICAgICBpbWFnZTogXCJpcGZzOi8vLi4uXCIsXG4gICAgICogICB9LFxuICAgICAqICAgLy8gRVJDMjAgcmV3YXJkcyB0byBiZSBpbmNsdWRlZCBpbiB0aGUgcGFja1xuICAgICAqICAgZXJjMjBSZXdhcmRzOiBbXG4gICAgICogICAgIHtcbiAgICAgKiAgICAgICBhc3NldENvbnRyYWN0OiBcIjB4Li4uXCIsXG4gICAgICogICAgICAgcXVhbnRpdHlQZXJSZXdhcmQ6IDUsXG4gICAgICogICAgICAgcXVhbnRpdHk6IDEwMCxcbiAgICAgKiAgICAgICB0b3RhbFJld2FyZHM6IDIwLFxuICAgICAqICAgICB9XG4gICAgICogICBdLFxuICAgICAqICAgLy8gRVJDNzIxIHJld2FyZHMgdG8gYmUgaW5jbHVkZWQgaW4gdGhlIHBhY2tcbiAgICAgKiAgIGVyYzcyMVJld2FyZHM6IFtcbiAgICAgKiAgICAge1xuICAgICAqICAgICAgIGFzc2V0Q29udHJhY3Q6IFwiMHguLi5cIixcbiAgICAgKiAgICAgICB0b2tlbklkOiAwLFxuICAgICAqICAgICB9XG4gICAgICogICBdLFxuICAgICAqICAgLy8gRVJDMTE1NSByZXdhcmRzIHRvIGJlIGluY2x1ZGVkIGluIHRoZSBwYWNrXG4gICAgICogICBlcmMxMTU1UmV3YXJkczogW1xuICAgICAqICAgICB7XG4gICAgICogICAgICAgYXNzZXRDb250cmFjdDogXCIweC4uLlwiLFxuICAgICAqICAgICAgIHRva2VuSWQ6IDAsXG4gICAgICogICAgICAgcXVhbnRpdHlQZXJSZXdhcmQ6IDEsXG4gICAgICogICAgICAgdG90YWxSZXdhcmRzOiAxMDAsXG4gICAgICogICAgIH1cbiAgICAgKiAgIF0sXG4gICAgICogICBvcGVuU3RhcnRUaW1lOiBuZXcgRGF0ZSgpLCAvLyB0aGUgZGF0ZSB0aGF0IHBhY2tzIGNhbiBzdGFydCB0byBiZSBvcGVuZWQsIGRlZmF1bHRzIHRvIG5vd1xuICAgICAqICAgcmV3YXJkc1BlclBhY2s6IDEsIC8vIHRoZSBudW1iZXIgb2YgcmV3YXJkcyBpbiBlYWNoIHBhY2ssIGRlZmF1bHRzIHRvIDFcbiAgICAgKiB9XG4gICAgICpcbiAgICAgKiBjb25zdCB0eCA9IGF3YWl0IGNvbnRyYWN0LmNyZWF0ZShwYWNrKTtcbiAgICAgKiBgYGBcbiAgICAgKi9cbiAgICBfZGVmaW5lUHJvcGVydHkodGhpcywgXCJjcmVhdGVcIiwgYnVpbGRUcmFuc2FjdGlvbkZ1bmN0aW9uKGFzeW5jIG1ldGFkYXRhV2l0aFJld2FyZHMgPT4ge1xuICAgICAgY29uc3Qgc2lnbmVyQWRkcmVzcyA9IGF3YWl0IHRoaXMuY29udHJhY3RXcmFwcGVyLmdldFNpZ25lckFkZHJlc3MoKTtcbiAgICAgIHJldHVybiB0aGlzLmNyZWF0ZVRvLnByZXBhcmUoc2lnbmVyQWRkcmVzcywgbWV0YWRhdGFXaXRoUmV3YXJkcyk7XG4gICAgfSkpO1xuICAgIC8qKlxuICAgICAqIEFkZCBQYWNrIENvbnRlbnRzXG4gICAgICogQHJlbWFya3MgQWRkIGNvbnRlbnRzIHRvIGFuIGV4aXN0aW5nIHBhY2suXG4gICAgICogQHJlbWFya3MgU2VlIHtAbGluayBQYWNrLmFkZFBhY2tDb250ZW50c31cbiAgICAgKlxuICAgICAqIEBwYXJhbSBwYWNrSWQgLSB0b2tlbiBJZCBvZiB0aGUgcGFjayB0byBhZGQgY29udGVudHMgdG9cbiAgICAgKiBAcGFyYW0gcGFja0NvbnRlbnRzIC0gdGhlIHJld2FyZHMgdG8gaW5jbHVkZSBpbiB0aGUgcGFja1xuICAgICAqIEBleGFtcGxlXG4gICAgICogYGBgamF2YXNjcmlwdFxuICAgICAqIGNvbnN0IHBhY2tDb250ZW50cyA9IHtcbiAgICAgKiAgIC8vIEVSQzIwIHJld2FyZHMgdG8gYmUgaW5jbHVkZWQgaW4gdGhlIHBhY2tcbiAgICAgKiAgIGVyYzIwUmV3YXJkczogW1xuICAgICAqICAgICB7XG4gICAgICogICAgICAgYXNzZXRDb250cmFjdDogXCIweC4uLlwiLFxuICAgICAqICAgICAgIHF1YW50aXR5UGVyUmV3YXJkOiA1LFxuICAgICAqICAgICAgIHF1YW50aXR5OiAxMDAsXG4gICAgICogICAgICAgdG90YWxSZXdhcmRzOiAyMCxcbiAgICAgKiAgICAgfVxuICAgICAqICAgXSxcbiAgICAgKiAgIC8vIEVSQzcyMSByZXdhcmRzIHRvIGJlIGluY2x1ZGVkIGluIHRoZSBwYWNrXG4gICAgICogICBlcmM3MjFSZXdhcmRzOiBbXG4gICAgICogICAgIHtcbiAgICAgKiAgICAgICBhc3NldENvbnRyYWN0OiBcIjB4Li4uXCIsXG4gICAgICogICAgICAgdG9rZW5JZDogMCxcbiAgICAgKiAgICAgfVxuICAgICAqICAgXSxcbiAgICAgKiAgIC8vIEVSQzExNTUgcmV3YXJkcyB0byBiZSBpbmNsdWRlZCBpbiB0aGUgcGFja1xuICAgICAqICAgZXJjMTE1NVJld2FyZHM6IFtcbiAgICAgKiAgICAge1xuICAgICAqICAgICAgIGFzc2V0Q29udHJhY3Q6IFwiMHguLi5cIixcbiAgICAgKiAgICAgICB0b2tlbklkOiAwLFxuICAgICAqICAgICAgIHF1YW50aXR5UGVyUmV3YXJkOiAxLFxuICAgICAqICAgICAgIHRvdGFsUmV3YXJkczogMTAwLFxuICAgICAqICAgICB9XG4gICAgICogICBdLFxuICAgICAqIH1cbiAgICAgKlxuICAgICAqIGNvbnN0IHR4ID0gYXdhaXQgY29udHJhY3QuYWRkUGFja0NvbnRlbnRzKHBhY2tJZCwgcGFja0NvbnRlbnRzKTtcbiAgICAgKiBgYGBcbiAgICAgKi9cbiAgICBfZGVmaW5lUHJvcGVydHkodGhpcywgXCJhZGRQYWNrQ29udGVudHNcIiwgYnVpbGRUcmFuc2FjdGlvbkZ1bmN0aW9uKGFzeW5jIChwYWNrSWQsIHBhY2tDb250ZW50cykgPT4ge1xuICAgICAgY29uc3Qgc2lnbmVyQWRkcmVzcyA9IGF3YWl0IHRoaXMuY29udHJhY3RXcmFwcGVyLmdldFNpZ25lckFkZHJlc3MoKTtcbiAgICAgIGNvbnN0IHBhcnNlZENvbnRlbnRzID0gYXdhaXQgUGFja1Jld2FyZHNPdXRwdXRTY2hlbWEucGFyc2VBc3luYyhwYWNrQ29udGVudHMpO1xuICAgICAgY29uc3Qge1xuICAgICAgICBjb250ZW50cyxcbiAgICAgICAgbnVtT2ZSZXdhcmRVbml0c1xuICAgICAgfSA9IGF3YWl0IHRoaXMudG9QYWNrQ29udGVudEFyZ3MocGFyc2VkQ29udGVudHMpO1xuICAgICAgcmV0dXJuIFRyYW5zYWN0aW9uLmZyb21Db250cmFjdFdyYXBwZXIoe1xuICAgICAgICBjb250cmFjdFdyYXBwZXI6IHRoaXMuY29udHJhY3RXcmFwcGVyLFxuICAgICAgICBtZXRob2Q6IFwiYWRkUGFja0NvbnRlbnRzXCIsXG4gICAgICAgIGFyZ3M6IFtwYWNrSWQsIGNvbnRlbnRzLCBudW1PZlJld2FyZFVuaXRzLCBzaWduZXJBZGRyZXNzXSxcbiAgICAgICAgcGFyc2U6IHJlY2VpcHQgPT4ge1xuICAgICAgICAgIGNvbnN0IGV2ZW50ID0gdGhpcy5jb250cmFjdFdyYXBwZXIucGFyc2VMb2dzKFwiUGFja1VwZGF0ZWRcIiwgcmVjZWlwdD8ubG9ncyk7XG4gICAgICAgICAgaWYgKGV2ZW50Lmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiUGFja1VwZGF0ZWQgZXZlbnQgbm90IGZvdW5kXCIpO1xuICAgICAgICAgIH1cbiAgICAgICAgICBjb25zdCBpZCA9IGV2ZW50WzBdLmFyZ3MucGFja0lkO1xuICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBpZDogaWQsXG4gICAgICAgICAgICByZWNlaXB0LFxuICAgICAgICAgICAgZGF0YTogKCkgPT4gdGhpcy5lcmMxMTU1LmdldChpZClcbiAgICAgICAgICB9O1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9KSk7XG4gICAgLyoqXG4gICAgICogQ3JlYXRlIFBhY2sgVG8gV2FsbGV0XG4gICAgICogQHJlbWFya3MgQ3JlYXRlIGEgbmV3IHBhY2sgd2l0aCB0aGUgZ2l2ZW4gbWV0YWRhdGEgYW5kIHJld2FyZHMgYW5kIG1pbnQgaXQgdG8gdGhlIHNwZWNpZmllZCBhZGRyZXNzLlxuICAgICAqXG4gICAgICogQHBhcmFtIHRvIC0gdGhlIGFkZHJlc3MgdG8gbWludCB0aGUgcGFjayB0b1xuICAgICAqIEBwYXJhbSBtZXRhZGF0YVdpdGhSZXdhcmRzIC0gdGhlIG1ldGFkYXRhIGFuZCByZXdhcmRzIHRvIGluY2x1ZGUgaW4gdGhlIHBhY2tcbiAgICAgKlxuICAgICAqIEBleGFtcGxlXG4gICAgICogYGBgamF2YXNjcmlwdFxuICAgICAqIGNvbnN0IHBhY2sgPSB7XG4gICAgICogICAvLyBUaGUgbWV0YWRhdGEgZm9yIHRoZSBwYWNrIE5GVCBpdHNlbGZcbiAgICAgKiAgIHBhY2tNZXRhZGF0YToge1xuICAgICAqICAgICBuYW1lOiBcIk15IFBhY2tcIixcbiAgICAgKiAgICAgZGVzY3JpcHRpb246IFwiVGhpcyBpcyBhIG5ldyBwYWNrXCIsXG4gICAgICogICAgIGltYWdlOiBcImlwZnM6Ly8uLi5cIixcbiAgICAgKiAgIH0sXG4gICAgICogICAvLyBFUkMyMCByZXdhcmRzIHRvIGJlIGluY2x1ZGVkIGluIHRoZSBwYWNrXG4gICAgICogICBlcmMyMFJld2FyZHM6IFtcbiAgICAgKiAgICAge1xuICAgICAqICAgICAgIGFzc2V0Q29udHJhY3Q6IFwiMHguLi5cIixcbiAgICAgKiAgICAgICBxdWFudGl0eVBlclJld2FyZDogNSxcbiAgICAgKiAgICAgICBxdWFudGl0eTogMTAwLFxuICAgICAqICAgICAgIHRvdGFsUmV3YXJkczogMjAsXG4gICAgICogICAgIH1cbiAgICAgKiAgIF0sXG4gICAgICogICAvLyBFUkM3MjEgcmV3YXJkcyB0byBiZSBpbmNsdWRlZCBpbiB0aGUgcGFja1xuICAgICAqICAgZXJjNzIxUmV3YXJkczogW1xuICAgICAqICAgICB7XG4gICAgICogICAgICAgYXNzZXRDb250cmFjdDogXCIweC4uLlwiLFxuICAgICAqICAgICAgIHRva2VuSWQ6IDAsXG4gICAgICogICAgIH1cbiAgICAgKiAgIF0sXG4gICAgICogICAvLyBFUkMxMTU1IHJld2FyZHMgdG8gYmUgaW5jbHVkZWQgaW4gdGhlIHBhY2tcbiAgICAgKiAgIGVyYzExNTVSZXdhcmRzOiBbXG4gICAgICogICAgIHtcbiAgICAgKiAgICAgICBhc3NldENvbnRyYWN0OiBcIjB4Li4uXCIsXG4gICAgICogICAgICAgdG9rZW5JZDogMCxcbiAgICAgKiAgICAgICBxdWFudGl0eVBlclJld2FyZDogMSxcbiAgICAgKiAgICAgICB0b3RhbFJld2FyZHM6IDEwMCxcbiAgICAgKiAgICAgfVxuICAgICAqICAgXSxcbiAgICAgKiAgIG9wZW5TdGFydFRpbWU6IG5ldyBEYXRlKCksIC8vIHRoZSBkYXRlIHRoYXQgcGFja3MgY2FuIHN0YXJ0IHRvIGJlIG9wZW5lZCwgZGVmYXVsdHMgdG8gbm93XG4gICAgICogICByZXdhcmRzUGVyUGFjazogMSwgLy8gdGhlIG51bWJlciBvZiByZXdhcmRzIGluIGVhY2ggcGFjaywgZGVmYXVsdHMgdG8gMVxuICAgICAqIH1cbiAgICAgKlxuICAgICAqIGNvbnN0IHR4ID0gYXdhaXQgY29udHJhY3QuY3JlYXRlVG8oXCIweC4uLlwiLCBwYWNrKTtcbiAgICAgKiBgYGBcbiAgICAgKi9cbiAgICBfZGVmaW5lUHJvcGVydHkodGhpcywgXCJjcmVhdGVUb1wiLCBidWlsZFRyYW5zYWN0aW9uRnVuY3Rpb24oYXN5bmMgKHRvLCBtZXRhZGF0YVdpdGhSZXdhcmRzKSA9PiB7XG4gICAgICBjb25zdCB1cmkgPSBhd2FpdCB1cGxvYWRPckV4dHJhY3RVUkkobWV0YWRhdGFXaXRoUmV3YXJkcy5wYWNrTWV0YWRhdGEsIHRoaXMuc3RvcmFnZSk7XG4gICAgICBjb25zdCBwYXJzZWRNZXRhZGF0YSA9IGF3YWl0IFBhY2tNZXRhZGF0YUlucHV0U2NoZW1hLnBhcnNlQXN5bmMobWV0YWRhdGFXaXRoUmV3YXJkcyk7XG4gICAgICBjb25zdCB7XG4gICAgICAgIGVyYzIwUmV3YXJkcyxcbiAgICAgICAgZXJjNzIxUmV3YXJkcyxcbiAgICAgICAgZXJjMTE1NVJld2FyZHNcbiAgICAgIH0gPSBwYXJzZWRNZXRhZGF0YTtcbiAgICAgIGNvbnN0IHJld2FyZHNEYXRhID0ge1xuICAgICAgICBlcmMyMFJld2FyZHMsXG4gICAgICAgIGVyYzcyMVJld2FyZHMsXG4gICAgICAgIGVyYzExNTVSZXdhcmRzXG4gICAgICB9O1xuICAgICAgY29uc3Qge1xuICAgICAgICBjb250ZW50cyxcbiAgICAgICAgbnVtT2ZSZXdhcmRVbml0c1xuICAgICAgfSA9IGF3YWl0IHRoaXMudG9QYWNrQ29udGVudEFyZ3MocmV3YXJkc0RhdGEpO1xuICAgICAgcmV0dXJuIFRyYW5zYWN0aW9uLmZyb21Db250cmFjdFdyYXBwZXIoe1xuICAgICAgICBjb250cmFjdFdyYXBwZXI6IHRoaXMuY29udHJhY3RXcmFwcGVyLFxuICAgICAgICBtZXRob2Q6IFwiY3JlYXRlUGFja1wiLFxuICAgICAgICBhcmdzOiBbY29udGVudHMsIG51bU9mUmV3YXJkVW5pdHMsIHVyaSwgcGFyc2VkTWV0YWRhdGEub3BlblN0YXJ0VGltZSwgcGFyc2VkTWV0YWRhdGEucmV3YXJkc1BlclBhY2ssIGF3YWl0IHJlc29sdmVBZGRyZXNzKHRvKV0sXG4gICAgICAgIHBhcnNlOiByZWNlaXB0ID0+IHtcbiAgICAgICAgICBjb25zdCBldmVudCA9IHRoaXMuY29udHJhY3RXcmFwcGVyLnBhcnNlTG9ncyhcIlBhY2tDcmVhdGVkXCIsIHJlY2VpcHQ/LmxvZ3MpO1xuICAgICAgICAgIGlmIChldmVudC5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIlBhY2tDcmVhdGVkIGV2ZW50IG5vdCBmb3VuZFwiKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgY29uc3QgcGFja0lkID0gZXZlbnRbMF0uYXJncy5wYWNrSWQ7XG4gICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGlkOiBwYWNrSWQsXG4gICAgICAgICAgICByZWNlaXB0LFxuICAgICAgICAgICAgZGF0YTogKCkgPT4gdGhpcy5lcmMxMTU1LmdldChwYWNrSWQpXG4gICAgICAgICAgfTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfSkpO1xuICAgIC8qKlxuICAgICAqIE9wZW4gUGFja1xuICAgICAqXG4gICAgICogQHJlbWFya3MgLSBPcGVuIGEgcGFjayB0byByZXZlYWwgdGhlIGNvbnRhaW5lZCByZXdhcmRzLiBUaGlzIHdpbGwgYnVybiB0aGUgc3BlY2lmaWVkIHBhY2sgYW5kXG4gICAgICogdGhlIGNvbnRhaW5lZCBhc3NldHMgd2lsbCBiZSB0cmFuc2ZlcnJlZCB0byB0aGUgb3BlbmluZyB1c2VycyB3YWxsZXQuXG4gICAgICpcbiAgICAgKiBAcGFyYW0gdG9rZW5JZCAtIHRoZSB0b2tlbiBJRCBvZiB0aGUgcGFjayB5b3Ugd2FudCB0byBvcGVuXG4gICAgICogQHBhcmFtIGFtb3VudCAtIHRoZSBhbW91bnQgb2YgcGFja3MgeW91IHdhbnQgdG8gb3BlblxuICAgICAqXG4gICAgICogQGV4YW1wbGVcbiAgICAgKiBgYGBqYXZhc2NyaXB0XG4gICAgICogY29uc3QgdG9rZW5JZCA9IDBcbiAgICAgKiBjb25zdCBhbW91bnQgPSAxXG4gICAgICogY29uc3QgdHggPSBhd2FpdCBjb250cmFjdC5vcGVuKHRva2VuSWQsIGFtb3VudCk7XG4gICAgICogYGBgXG4gICAgICovXG4gICAgX2RlZmluZVByb3BlcnR5KHRoaXMsIFwib3BlblwiLCBidWlsZFRyYW5zYWN0aW9uRnVuY3Rpb24oYXN5bmMgZnVuY3Rpb24gKHRva2VuSWQpIHtcbiAgICAgIGxldCBhbW91bnQgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IDE7XG4gICAgICBsZXQgZ2FzTGltaXQgPSBhcmd1bWVudHMubGVuZ3RoID4gMiAmJiBhcmd1bWVudHNbMl0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1syXSA6IDUwMDAwMDtcbiAgICAgIGlmIChfdGhpcy5fdnJmKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIlRoaXMgY29udHJhY3QgaXMgdXNpbmcgQ2hhaW5saW5rIFZSRiwgdXNlIGBjb250cmFjdC52cmYub3BlbigpYCBvciBgY29udHJhY3QudnJmLm9wZW5BbmRDbGFpbSgpYCBpbnN0ZWFkXCIpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIFRyYW5zYWN0aW9uLmZyb21Db250cmFjdFdyYXBwZXIoe1xuICAgICAgICBjb250cmFjdFdyYXBwZXI6IF90aGlzLmNvbnRyYWN0V3JhcHBlcixcbiAgICAgICAgbWV0aG9kOiBcIm9wZW5QYWNrXCIsXG4gICAgICAgIGFyZ3M6IFt0b2tlbklkLCBhbW91bnRdLFxuICAgICAgICBvdmVycmlkZXM6IHtcbiAgICAgICAgICAvLyBIaWdoZXIgZ2FzIGxpbWl0IGZvciBvcGVuaW5nIHBhY2tzXG4gICAgICAgICAgZ2FzTGltaXRcbiAgICAgICAgfSxcbiAgICAgICAgcGFyc2U6IGFzeW5jIHJlY2VpcHQgPT4ge1xuICAgICAgICAgIGNvbnN0IGV2ZW50ID0gX3RoaXMuY29udHJhY3RXcmFwcGVyLnBhcnNlTG9ncyhcIlBhY2tPcGVuZWRcIiwgcmVjZWlwdD8ubG9ncyk7XG4gICAgICAgICAgaWYgKGV2ZW50Lmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiUGFja09wZW5lZCBldmVudCBub3QgZm91bmRcIik7XG4gICAgICAgICAgfVxuICAgICAgICAgIGNvbnN0IHJld2FyZHMgPSBldmVudFswXS5hcmdzLnJld2FyZFVuaXRzRGlzdHJpYnV0ZWQ7XG4gICAgICAgICAgY29uc3QgZXJjMjBSZXdhcmRzID0gW107XG4gICAgICAgICAgY29uc3QgZXJjNzIxUmV3YXJkcyA9IFtdO1xuICAgICAgICAgIGNvbnN0IGVyYzExNTVSZXdhcmRzID0gW107XG4gICAgICAgICAgZm9yIChjb25zdCByZXdhcmQgb2YgcmV3YXJkcykge1xuICAgICAgICAgICAgc3dpdGNoIChyZXdhcmQudG9rZW5UeXBlKSB7XG4gICAgICAgICAgICAgIGNhc2UgMDpcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICBjb25zdCB0b2tlbk1ldGFkYXRhID0gYXdhaXQgZmV0Y2hDdXJyZW5jeU1ldGFkYXRhKF90aGlzLmNvbnRyYWN0V3JhcHBlci5nZXRQcm92aWRlcigpLCByZXdhcmQuYXNzZXRDb250cmFjdCk7XG4gICAgICAgICAgICAgICAgICBlcmMyMFJld2FyZHMucHVzaCh7XG4gICAgICAgICAgICAgICAgICAgIGNvbnRyYWN0QWRkcmVzczogcmV3YXJkLmFzc2V0Q29udHJhY3QsXG4gICAgICAgICAgICAgICAgICAgIHF1YW50aXR5UGVyUmV3YXJkOiBldGhlcnMudXRpbHMuZm9ybWF0VW5pdHMocmV3YXJkLnRvdGFsQW1vdW50LCB0b2tlbk1ldGFkYXRhLmRlY2ltYWxzKS50b1N0cmluZygpXG4gICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgY2FzZSAxOlxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgIGVyYzcyMVJld2FyZHMucHVzaCh7XG4gICAgICAgICAgICAgICAgICAgIGNvbnRyYWN0QWRkcmVzczogcmV3YXJkLmFzc2V0Q29udHJhY3QsXG4gICAgICAgICAgICAgICAgICAgIHRva2VuSWQ6IHJld2FyZC50b2tlbklkLnRvU3RyaW5nKClcbiAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICBjYXNlIDI6XG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgZXJjMTE1NVJld2FyZHMucHVzaCh7XG4gICAgICAgICAgICAgICAgICAgIGNvbnRyYWN0QWRkcmVzczogcmV3YXJkLmFzc2V0Q29udHJhY3QsXG4gICAgICAgICAgICAgICAgICAgIHRva2VuSWQ6IHJld2FyZC50b2tlbklkLnRvU3RyaW5nKCksXG4gICAgICAgICAgICAgICAgICAgIHF1YW50aXR5UGVyUmV3YXJkOiByZXdhcmQudG90YWxBbW91bnQudG9TdHJpbmcoKVxuICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBlcmMyMFJld2FyZHMsXG4gICAgICAgICAgICBlcmM3MjFSZXdhcmRzLFxuICAgICAgICAgICAgZXJjMTE1NVJld2FyZHNcbiAgICAgICAgICB9O1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9KSk7XG4gICAgdGhpcy5hYmkgPSBBYmlTY2hlbWEucGFyc2UoYWJpIHx8IFtdKTtcbiAgICB0aGlzLm1ldGFkYXRhID0gbmV3IENvbnRyYWN0TWV0YWRhdGEodGhpcy5jb250cmFjdFdyYXBwZXIsIFBhY2tDb250cmFjdFNjaGVtYSwgdGhpcy5zdG9yYWdlKTtcbiAgICB0aGlzLmFwcCA9IG5ldyBDb250cmFjdEFwcFVSSSh0aGlzLmNvbnRyYWN0V3JhcHBlciwgdGhpcy5tZXRhZGF0YSwgdGhpcy5zdG9yYWdlKTtcbiAgICB0aGlzLnJvbGVzID0gbmV3IENvbnRyYWN0Um9sZXModGhpcy5jb250cmFjdFdyYXBwZXIsIFBhY2suY29udHJhY3RSb2xlcyk7XG4gICAgdGhpcy5yb3lhbHRpZXMgPSBuZXcgQ29udHJhY3RSb3lhbHR5KHRoaXMuY29udHJhY3RXcmFwcGVyLCB0aGlzLm1ldGFkYXRhKTtcbiAgICB0aGlzLmVuY29kZXIgPSBuZXcgQ29udHJhY3RFbmNvZGVyKHRoaXMuY29udHJhY3RXcmFwcGVyKTtcbiAgICB0aGlzLmVzdGltYXRvciA9IG5ldyBHYXNDb3N0RXN0aW1hdG9yKHRoaXMuY29udHJhY3RXcmFwcGVyKTtcbiAgICB0aGlzLmV2ZW50cyA9IG5ldyBDb250cmFjdEV2ZW50cyh0aGlzLmNvbnRyYWN0V3JhcHBlcik7XG4gICAgdGhpcy5pbnRlcmNlcHRvciA9IG5ldyBDb250cmFjdEludGVyY2VwdG9yKHRoaXMuY29udHJhY3RXcmFwcGVyKTtcbiAgICB0aGlzLm93bmVyID0gbmV3IENvbnRyYWN0T3duZXIodGhpcy5jb250cmFjdFdyYXBwZXIpO1xuICAgIHRoaXMuX3ZyZiA9IHRoaXMuZGV0ZWN0VnJmKCk7XG4gIH1cblxuICAvKipcbiAgICogQGludGVybmFsXG4gICAqL1xuICBvbk5ldHdvcmtVcGRhdGVkKG5ldHdvcmspIHtcbiAgICB0aGlzLmNvbnRyYWN0V3JhcHBlci51cGRhdGVTaWduZXJPclByb3ZpZGVyKG5ldHdvcmspO1xuICAgIHRoaXMuX3ZyZj8ub25OZXR3b3JrVXBkYXRlZChuZXR3b3JrKTtcbiAgfVxuICBnZXRBZGRyZXNzKCkge1xuICAgIHJldHVybiB0aGlzLmNvbnRyYWN0V3JhcHBlci5yZWFkQ29udHJhY3QuYWRkcmVzcztcbiAgfVxuXG4gIC8qKiAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcbiAgICogUkVBRCBGVU5DVElPTlNcbiAgICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG5cbiAgLyoqXG4gICAqIEdldCBhIHNpbmdsZSBQYWNrXG4gICAqXG4gICAqIEByZW1hcmtzIEdldCBhbGwgdGhlIGRhdGEgYXNzb2NpYXRlZCB3aXRoIGV2ZXJ5IHBhY2sgaW4gdGhpcyBjb250cmFjdC5cbiAgICpcbiAgICogQnkgZGVmYXVsdCwgcmV0dXJucyB0aGUgZmlyc3QgMTAwIHBhY2tzLCB1c2UgcXVlcnlQYXJhbXMgdG8gZmV0Y2ggbW9yZS5cbiAgICpcbiAgICogQGV4YW1wbGVcbiAgICogYGBgamF2YXNjcmlwdFxuICAgKiBjb25zdCBwYWNrID0gYXdhaXQgY29udHJhY3QuZ2V0KDApO1xuICAgKiBjb25zb2xlLmxvZyhwYWNrcztcbiAgICogYGBgXG4gICAqL1xuICBhc3luYyBnZXQodG9rZW5JZCkge1xuICAgIHJldHVybiB0aGlzLmVyYzExNTUuZ2V0KHRva2VuSWQpO1xuICB9XG5cbiAgLyoqXG4gICAqIEdldCBBbGwgUGFja3NcbiAgICpcbiAgICogQHJlbWFya3MgR2V0IGFsbCB0aGUgZGF0YSBhc3NvY2lhdGVkIHdpdGggZXZlcnkgcGFjayBpbiB0aGlzIGNvbnRyYWN0LlxuICAgKlxuICAgKiBCeSBkZWZhdWx0LCByZXR1cm5zIHRoZSBmaXJzdCAxMDAgcGFja3MsIHVzZSBxdWVyeVBhcmFtcyB0byBmZXRjaCBtb3JlLlxuICAgKlxuICAgKiBAZXhhbXBsZVxuICAgKiBgYGBqYXZhc2NyaXB0XG4gICAqIGNvbnN0IHBhY2tzID0gYXdhaXQgY29udHJhY3QuZ2V0QWxsKCk7XG4gICAqIGNvbnNvbGUubG9nKHBhY2tzO1xuICAgKiBgYGBcbiAgICogQHBhcmFtIHF1ZXJ5UGFyYW1zIC0gb3B0aW9uYWwgZmlsdGVyaW5nIHRvIG9ubHkgZmV0Y2ggYSBzdWJzZXQgb2YgcmVzdWx0cy5cbiAgICogQHJldHVybnMgVGhlIHBhY2sgbWV0YWRhdGEgZm9yIGFsbCBwYWNrcyBxdWVyaWVkLlxuICAgKi9cbiAgYXN5bmMgZ2V0QWxsKHF1ZXJ5UGFyYW1zKSB7XG4gICAgcmV0dXJuIHRoaXMuZXJjMTE1NS5nZXRBbGwocXVlcnlQYXJhbXMpO1xuICB9XG5cbiAgLyoqXG4gICAqIEdldCBPd25lZCBQYWNrc1xuICAgKlxuICAgKiBAcmVtYXJrcyBHZXQgYWxsIHRoZSBkYXRhIGFzc29jaWF0ZWQgd2l0aCB0aGUgcGFja3Mgb3duZWQgYnkgYSBzcGVjaWZpYyB3YWxsZXQuXG4gICAqXG4gICAqIEBleGFtcGxlXG4gICAqIGBgYGphdmFzY3JpcHRcbiAgICogLy8gQWRkcmVzcyBvZiB0aGUgd2FsbGV0IHRvIGdldCB0aGUgcGFja3Mgb2ZcbiAgICogY29uc3QgYWRkcmVzcyA9IFwie3t3YWxsZXRfYWRkcmVzc319XCI7XG4gICAqIGNvbnN0IHBhY2tzcyA9IGF3YWl0IGNvbnRyYWN0LmdldE93bmVkKGFkZHJlc3MpO1xuICAgKiBgYGBcbiAgICpcbiAgICogQHJldHVybnMgVGhlIHBhY2sgbWV0YWRhdGEgZm9yIGFsbCB0aGUgb3duZWQgcGFja3MgaW4gdGhlIGNvbnRyYWN0LlxuICAgKi9cbiAgYXN5bmMgZ2V0T3duZWQod2FsbGV0QWRkcmVzcykge1xuICAgIHJldHVybiB0aGlzLmVyYzExNTUuZ2V0T3duZWQod2FsbGV0QWRkcmVzcyk7XG4gIH1cblxuICAvKipcbiAgICogR2V0IHRoZSBudW1iZXIgb2YgcGFja3MgY3JlYXRlZFxuICAgKiBAcmV0dXJucyB0aGUgdG90YWwgbnVtYmVyIG9mIHBhY2tzIG1pbnRlZCBpbiB0aGlzIGNvbnRyYWN0XG4gICAqIEBwdWJsaWNcbiAgICovXG4gIGFzeW5jIGdldFRvdGFsQ291bnQoKSB7XG4gICAgcmV0dXJuIHRoaXMuZXJjMTE1NS50b3RhbENvdW50KCk7XG4gIH1cblxuICAvKipcbiAgICogR2V0IHdoZXRoZXIgdXNlcnMgY2FuIHRyYW5zZmVyIHBhY2tzIGZyb20gdGhpcyBjb250cmFjdFxuICAgKi9cbiAgYXN5bmMgaXNUcmFuc2ZlclJlc3RyaWN0ZWQoKSB7XG4gICAgY29uc3QgYW55b25lQ2FuVHJhbnNmZXIgPSBhd2FpdCB0aGlzLmNvbnRyYWN0V3JhcHBlci5yZWFkQ29udHJhY3QuaGFzUm9sZShnZXRSb2xlSGFzaChcInRyYW5zZmVyXCIpLCBldGhlcnMuY29uc3RhbnRzLkFkZHJlc3NaZXJvKTtcbiAgICByZXR1cm4gIWFueW9uZUNhblRyYW5zZmVyO1xuICB9XG5cbiAgLyoqXG4gICAqIEdldCBQYWNrIENvbnRlbnRzXG4gICAqIEByZW1hcmtzIEdldCB0aGUgcmV3YXJkcyBjb250YWluZWQgaW5zaWRlIGEgcGFjay5cbiAgICpcbiAgICogQHBhcmFtIHBhY2tJZCAtIFRoZSBpZCBvZiB0aGUgcGFjayB0byBnZXQgdGhlIGNvbnRlbnRzIG9mLlxuICAgKiBAcmV0dXJucyAtIFRoZSBjb250ZW50cyBvZiB0aGUgcGFjay5cbiAgICpcbiAgICogQGV4YW1wbGVcbiAgICogYGBgamF2YXNjcmlwdFxuICAgKiBjb25zdCBwYWNrSWQgPSAwO1xuICAgKiBjb25zdCBjb250ZW50cyA9IGF3YWl0IGNvbnRyYWN0LmdldFBhY2tDb250ZW50cyhwYWNrSWQpO1xuICAgKiBjb25zb2xlLmxvZyhjb250ZW50cy5lcmMyMFJld2FyZHMpO1xuICAgKiBjb25zb2xlLmxvZyhjb250ZW50cy5lcmM3MjFSZXdhcmRzKTtcbiAgICogY29uc29sZS5sb2coY29udGVudHMuZXJjMTE1NVJld2FyZHMpO1xuICAgKiBgYGBcbiAgICovXG4gIGFzeW5jIGdldFBhY2tDb250ZW50cyhwYWNrSWQpIHtcbiAgICBjb25zdCB7XG4gICAgICBjb250ZW50cyxcbiAgICAgIHBlclVuaXRBbW91bnRzXG4gICAgfSA9IGF3YWl0IHRoaXMuY29udHJhY3RXcmFwcGVyLnJlYWRDb250cmFjdC5nZXRQYWNrQ29udGVudHMocGFja0lkKTtcbiAgICBjb25zdCBlcmMyMFJld2FyZHMgPSBbXTtcbiAgICBjb25zdCBlcmM3MjFSZXdhcmRzID0gW107XG4gICAgY29uc3QgZXJjMTE1NVJld2FyZHMgPSBbXTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGNvbnRlbnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgICBjb25zdCByZXdhcmQgPSBjb250ZW50c1tpXTtcbiAgICAgIGNvbnN0IGFtb3VudCA9IHBlclVuaXRBbW91bnRzW2ldO1xuICAgICAgc3dpdGNoIChyZXdhcmQudG9rZW5UeXBlKSB7XG4gICAgICAgIGNhc2UgMDpcbiAgICAgICAgICB7XG4gICAgICAgICAgICBjb25zdCB0b2tlbk1ldGFkYXRhID0gYXdhaXQgZmV0Y2hDdXJyZW5jeU1ldGFkYXRhKHRoaXMuY29udHJhY3RXcmFwcGVyLmdldFByb3ZpZGVyKCksIHJld2FyZC5hc3NldENvbnRyYWN0KTtcbiAgICAgICAgICAgIGNvbnN0IHF1YW50aXR5UGVyUmV3YXJkID0gZXRoZXJzLnV0aWxzLmZvcm1hdFVuaXRzKGFtb3VudCwgdG9rZW5NZXRhZGF0YS5kZWNpbWFscyk7XG4gICAgICAgICAgICBjb25zdCB0b3RhbFJld2FyZHMgPSBldGhlcnMudXRpbHMuZm9ybWF0VW5pdHMoQmlnTnVtYmVyLmZyb20ocmV3YXJkLnRvdGFsQW1vdW50KS5kaXYoYW1vdW50KSwgdG9rZW5NZXRhZGF0YS5kZWNpbWFscyk7XG4gICAgICAgICAgICBlcmMyMFJld2FyZHMucHVzaCh7XG4gICAgICAgICAgICAgIGNvbnRyYWN0QWRkcmVzczogcmV3YXJkLmFzc2V0Q29udHJhY3QsXG4gICAgICAgICAgICAgIHF1YW50aXR5UGVyUmV3YXJkLFxuICAgICAgICAgICAgICB0b3RhbFJld2FyZHNcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgfVxuICAgICAgICBjYXNlIDE6XG4gICAgICAgICAge1xuICAgICAgICAgICAgZXJjNzIxUmV3YXJkcy5wdXNoKHtcbiAgICAgICAgICAgICAgY29udHJhY3RBZGRyZXNzOiByZXdhcmQuYXNzZXRDb250cmFjdCxcbiAgICAgICAgICAgICAgdG9rZW5JZDogcmV3YXJkLnRva2VuSWQudG9TdHJpbmcoKVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICB9XG4gICAgICAgIGNhc2UgMjpcbiAgICAgICAgICB7XG4gICAgICAgICAgICBlcmMxMTU1UmV3YXJkcy5wdXNoKHtcbiAgICAgICAgICAgICAgY29udHJhY3RBZGRyZXNzOiByZXdhcmQuYXNzZXRDb250cmFjdCxcbiAgICAgICAgICAgICAgdG9rZW5JZDogcmV3YXJkLnRva2VuSWQudG9TdHJpbmcoKSxcbiAgICAgICAgICAgICAgcXVhbnRpdHlQZXJSZXdhcmQ6IGFtb3VudC50b1N0cmluZygpLFxuICAgICAgICAgICAgICB0b3RhbFJld2FyZHM6IEJpZ051bWJlci5mcm9tKHJld2FyZC50b3RhbEFtb3VudCkuZGl2KGFtb3VudCkudG9TdHJpbmcoKVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICBlcmMyMFJld2FyZHMsXG4gICAgICBlcmM3MjFSZXdhcmRzLFxuICAgICAgZXJjMTE1NVJld2FyZHNcbiAgICB9O1xuICB9XG4gIC8qKiAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxuICAgKiBQUklWQVRFIEZVTkNUSU9OU1xuICAgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cblxuICBhc3luYyB0b1BhY2tDb250ZW50QXJncyhtZXRhZGF0YVdpdGhSZXdhcmRzKSB7XG4gICAgY29uc3QgY29udGVudHMgPSBbXTtcbiAgICBjb25zdCBudW1PZlJld2FyZFVuaXRzID0gW107XG4gICAgY29uc3Qge1xuICAgICAgZXJjMjBSZXdhcmRzLFxuICAgICAgZXJjNzIxUmV3YXJkcyxcbiAgICAgIGVyYzExNTVSZXdhcmRzXG4gICAgfSA9IG1ldGFkYXRhV2l0aFJld2FyZHM7XG4gICAgY29uc3QgcHJvdmlkZXIgPSB0aGlzLmNvbnRyYWN0V3JhcHBlci5nZXRQcm92aWRlcigpO1xuICAgIGNvbnN0IG93bmVyID0gYXdhaXQgdGhpcy5jb250cmFjdFdyYXBwZXIuZ2V0U2lnbmVyQWRkcmVzcygpO1xuICAgIGZvciAoY29uc3QgZXJjMjAgb2YgZXJjMjBSZXdhcmRzKSB7XG4gICAgICBjb25zdCBub3JtYWxpemVkUXVhbnRpdHkgPSBhd2FpdCBub3JtYWxpemVQcmljZVZhbHVlKHByb3ZpZGVyLCBlcmMyMC5xdWFudGl0eVBlclJld2FyZCwgZXJjMjAuY29udHJhY3RBZGRyZXNzKTtcbiAgICAgIC8vIE11bHRpcGx5IHRoZSBxdWFudGl0eSBvZiBvbmUgcmV3YXJkIGJ5IHRoZSBudW1iZXIgb2YgcmV3YXJkc1xuICAgICAgY29uc3QgdG90YWxRdWFudGl0eSA9IG5vcm1hbGl6ZWRRdWFudGl0eS5tdWwoZXJjMjAudG90YWxSZXdhcmRzKTtcbiAgICAgIGNvbnN0IGhhc0FsbG93YW5jZSA9IGF3YWl0IGhhc0VSQzIwQWxsb3dhbmNlKHRoaXMuY29udHJhY3RXcmFwcGVyLCBlcmMyMC5jb250cmFjdEFkZHJlc3MsIHRvdGFsUXVhbnRpdHkpO1xuICAgICAgaWYgKCFoYXNBbGxvd2FuY2UpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBFUkMyMCB0b2tlbiB3aXRoIGNvbnRyYWN0IGFkZHJlc3MgXCIke2VyYzIwLmNvbnRyYWN0QWRkcmVzc31cIiBkb2VzIG5vdCBoYXZlIGVub3VnaCBhbGxvd2FuY2UgdG8gdHJhbnNmZXIuXFxuXFxuWW91IGNhbiBzZXQgYWxsb3dhbmNlIHRvIHRoZSBtdWx0aXdyYXAgY29udHJhY3QgdG8gdHJhbnNmZXIgdGhlc2UgdG9rZW5zIGJ5IHJ1bm5pbmc6XFxuXFxuYXdhaXQgc2RrLmdldFRva2VuKFwiJHtlcmMyMC5jb250cmFjdEFkZHJlc3N9XCIpLnNldEFsbG93YW5jZShcIiR7dGhpcy5nZXRBZGRyZXNzKCl9XCIsICR7dG90YWxRdWFudGl0eX0pO1xcblxcbmApO1xuICAgICAgfVxuICAgICAgbnVtT2ZSZXdhcmRVbml0cy5wdXNoKGVyYzIwLnRvdGFsUmV3YXJkcyk7XG4gICAgICBjb250ZW50cy5wdXNoKHtcbiAgICAgICAgYXNzZXRDb250cmFjdDogZXJjMjAuY29udHJhY3RBZGRyZXNzLFxuICAgICAgICB0b2tlblR5cGU6IDAsXG4gICAgICAgIHRvdGFsQW1vdW50OiB0b3RhbFF1YW50aXR5LFxuICAgICAgICB0b2tlbklkOiAwXG4gICAgICB9KTtcbiAgICB9XG4gICAgZm9yIChjb25zdCBlcmM3MjEgb2YgZXJjNzIxUmV3YXJkcykge1xuICAgICAgY29uc3QgaXNBcHByb3ZlZCA9IGF3YWl0IGlzVG9rZW5BcHByb3ZlZEZvclRyYW5zZmVyKHRoaXMuY29udHJhY3RXcmFwcGVyLmdldFByb3ZpZGVyKCksIHRoaXMuZ2V0QWRkcmVzcygpLCBlcmM3MjEuY29udHJhY3RBZGRyZXNzLCBlcmM3MjEudG9rZW5JZCwgb3duZXIpO1xuICAgICAgaWYgKCFpc0FwcHJvdmVkKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgRVJDNzIxIHRva2VuIFwiJHtlcmM3MjEudG9rZW5JZH1cIiB3aXRoIGNvbnRyYWN0IGFkZHJlc3MgXCIke2VyYzcyMS5jb250cmFjdEFkZHJlc3N9XCIgaXMgbm90IGFwcHJvdmVkIGZvciB0cmFuc2Zlci5cXG5cXG5Zb3UgY2FuIGdpdmUgYXBwcm92YWwgdGhlIG11bHRpd3JhcCBjb250cmFjdCB0byB0cmFuc2ZlciB0aGlzIHRva2VuIGJ5IHJ1bm5pbmc6XFxuXFxuYXdhaXQgc2RrLmdldE5GVENvbGxlY3Rpb24oXCIke2VyYzcyMS5jb250cmFjdEFkZHJlc3N9XCIpLnNldEFwcHJvdmFsRm9yVG9rZW4oXCIke3RoaXMuZ2V0QWRkcmVzcygpfVwiLCAke2VyYzcyMS50b2tlbklkfSk7XFxuXFxuYCk7XG4gICAgICB9XG4gICAgICBudW1PZlJld2FyZFVuaXRzLnB1c2goXCIxXCIpO1xuICAgICAgY29udGVudHMucHVzaCh7XG4gICAgICAgIGFzc2V0Q29udHJhY3Q6IGVyYzcyMS5jb250cmFjdEFkZHJlc3MsXG4gICAgICAgIHRva2VuVHlwZTogMSxcbiAgICAgICAgdG90YWxBbW91bnQ6IDEsXG4gICAgICAgIHRva2VuSWQ6IGVyYzcyMS50b2tlbklkXG4gICAgICB9KTtcbiAgICB9XG4gICAgZm9yIChjb25zdCBlcmMxMTU1IG9mIGVyYzExNTVSZXdhcmRzKSB7XG4gICAgICBjb25zdCBpc0FwcHJvdmVkID0gYXdhaXQgaXNUb2tlbkFwcHJvdmVkRm9yVHJhbnNmZXIodGhpcy5jb250cmFjdFdyYXBwZXIuZ2V0UHJvdmlkZXIoKSwgdGhpcy5nZXRBZGRyZXNzKCksIGVyYzExNTUuY29udHJhY3RBZGRyZXNzLCBlcmMxMTU1LnRva2VuSWQsIG93bmVyKTtcbiAgICAgIGlmICghaXNBcHByb3ZlZCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEVSQzExNTUgdG9rZW4gXCIke2VyYzExNTUudG9rZW5JZH1cIiB3aXRoIGNvbnRyYWN0IGFkZHJlc3MgXCIke2VyYzExNTUuY29udHJhY3RBZGRyZXNzfVwiIGlzIG5vdCBhcHByb3ZlZCBmb3IgdHJhbnNmZXIuXFxuXFxuWW91IGNhbiBnaXZlIGFwcHJvdmFsIHRoZSBtdWx0aXdyYXAgY29udHJhY3QgdG8gdHJhbnNmZXIgdGhpcyB0b2tlbiBieSBydW5uaW5nOlxcblxcbmF3YWl0IHNkay5nZXRFZGl0aW9uKFwiJHtlcmMxMTU1LmNvbnRyYWN0QWRkcmVzc31cIikuc2V0QXBwcm92YWxGb3JBbGwoXCIke3RoaXMuZ2V0QWRkcmVzcygpfVwiLCB0cnVlKTtcXG5cXG5gKTtcbiAgICAgIH1cbiAgICAgIG51bU9mUmV3YXJkVW5pdHMucHVzaChlcmMxMTU1LnRvdGFsUmV3YXJkcyk7XG4gICAgICBjb250ZW50cy5wdXNoKHtcbiAgICAgICAgYXNzZXRDb250cmFjdDogZXJjMTE1NS5jb250cmFjdEFkZHJlc3MsXG4gICAgICAgIHRva2VuVHlwZTogMixcbiAgICAgICAgdG90YWxBbW91bnQ6IEJpZ051bWJlci5mcm9tKGVyYzExNTUucXVhbnRpdHlQZXJSZXdhcmQpLm11bChCaWdOdW1iZXIuZnJvbShlcmMxMTU1LnRvdGFsUmV3YXJkcykpLFxuICAgICAgICB0b2tlbklkOiBlcmMxMTU1LnRva2VuSWRcbiAgICAgIH0pO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgY29udGVudHMsXG4gICAgICBudW1PZlJld2FyZFVuaXRzXG4gICAgfTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAaW50ZXJuYWxcbiAgICovXG4gIGFzeW5jIHByZXBhcmUobWV0aG9kLCBhcmdzLCBvdmVycmlkZXMpIHtcbiAgICByZXR1cm4gVHJhbnNhY3Rpb24uZnJvbUNvbnRyYWN0V3JhcHBlcih7XG4gICAgICBjb250cmFjdFdyYXBwZXI6IHRoaXMuY29udHJhY3RXcmFwcGVyLFxuICAgICAgbWV0aG9kLFxuICAgICAgYXJncyxcbiAgICAgIG92ZXJyaWRlc1xuICAgIH0pO1xuICB9XG5cbiAgLyoqXG4gICAqIEBpbnRlcm5hbFxuICAgKi9cbiAgYXN5bmMgY2FsbChmdW5jdGlvbk5hbWUsIGFyZ3MsIG92ZXJyaWRlcykge1xuICAgIHJldHVybiB0aGlzLmNvbnRyYWN0V3JhcHBlci5jYWxsKGZ1bmN0aW9uTmFtZSwgYXJncywgb3ZlcnJpZGVzKTtcbiAgfVxuICBkZXRlY3RWcmYoKSB7XG4gICAgaWYgKGRldGVjdENvbnRyYWN0RmVhdHVyZSh0aGlzLmNvbnRyYWN0V3JhcHBlciwgXCJQYWNrVlJGXCIpKSB7XG4gICAgICByZXR1cm4gbmV3IFBhY2tWUkYodGhpcy5jb250cmFjdFdyYXBwZXIuZ2V0U2lnbmVyT3JQcm92aWRlcigpLCB0aGlzLmNvbnRyYWN0V3JhcHBlci5yZWFkQ29udHJhY3QuYWRkcmVzcywgdGhpcy5zdG9yYWdlLCB0aGlzLmNvbnRyYWN0V3JhcHBlci5vcHRpb25zLCB0aGlzLmNoYWluSWQpO1xuICAgIH1cbiAgICByZXR1cm4gdW5kZWZpbmVkO1xuICB9XG59XG5fZGVmaW5lUHJvcGVydHkoUGFjaywgXCJjb250cmFjdFJvbGVzXCIsIFtcImFkbWluXCIsIFwibWludGVyXCIsIFwiYXNzZXRcIiwgXCJ0cmFuc2ZlclwiXSk7XG5cbmV4cG9ydCB7IFBhY2sgfTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@thirdweb-dev/sdk/dist/pack-321a203a.browser.esm.js\n");

/***/ }),

/***/ "./node_modules/@thirdweb-dev/contracts-js/dist/abis/ERC20.json":
/*!**********************************************************************!*\
  !*** ./node_modules/@thirdweb-dev/contracts-js/dist/abis/ERC20.json ***!
  \**********************************************************************/
/***/ (function(module) {

module.exports = JSON.parse('[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}]');

/***/ })

}]);